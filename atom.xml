<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>smilEdit&#39;s Bolg</title>
  <subtitle>一直走，才能看到答案。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-05-04T09:04:51.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>zhanglf</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 基础</title>
    <link href="http://yoursite.com/2017/05/04/py%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2017/05/04/py基础/</id>
    <published>2017-05-04T06:52:57.000Z</published>
    <updated>2017-05-04T09:04:51.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><p>注释用 <code>#</code> 开头表示。</p>
<p>语法采用缩进的方式，虽然没有规定是几个空格，但是一般都是 4 个。 </p>
<p>大小写敏感。</p>
<p>通常我们在开头这么写：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<p>第一行注释是为了告诉 Linux/OS X 系统，这是一个 Python 可执行程序， Windows 系统会忽略这个注释。</p>
<p>由于 Python 源文件也是文本文件，当我们的代码中含有中文的时候（包括注释），第二行注释告诉 Py 解释器，读取源码的时候用指定编码读取。</p>
<h3 id="数据类型和变量"><a href="#数据类型和变量" class="headerlink" title="数据类型和变量"></a>数据类型和变量</h3><h4 id="整数"><a href="#整数" class="headerlink" title="整数"></a>整数</h4><p>可以处理<strong>任意大小</strong>的整数。</p>
<p>但是，</p>
<p><code>int</code> 类型的有最大值 （在我的电脑上是）</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>print(sys.maxint)</div><div class="line"><span class="number">9223372036854775807</span></div></pre></td></tr></table></figure>
<h4 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h4><p>没什么特别的。</p>
<h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>以 ‘’ 或 “” 括起来的任意文本。</p>
<h4 id="布尔值"><a href="#布尔值" class="headerlink" title="布尔值"></a>布尔值</h4><p><code>True</code> 和 <code>False</code> ，可以用 <code>or</code> 、<code>and</code> 、<code>not</code> 进行运算。 （和一般语言一样的）</p>
<h4 id="空值"><a href="#空值" class="headerlink" title="空值"></a>空值</h4><p><code>None</code> 代表空值，不是 0 ，因为 0 是有意义的。</p>
<h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><p>没什么特别的。</p>
<h4 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h4><p>没什么特别的。</p>
<h3 id="字符串和编码"><a href="#字符串和编码" class="headerlink" title="字符串和编码"></a>字符串和编码</h3><h4 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h4><p>py 比 Unicode 标准发布还早，所以一开始，字母在 py 中是用 ASCII 编码的，提供了 <code>ord()</code> 和 <code>chr()</code> 两个转换的函数</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>ord(<span class="string">'A'</span>)</div><div class="line"><span class="number">65</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">65</span>)</div><div class="line"><span class="string">'A'</span></div></pre></td></tr></table></figure>
<p>后来又增加了对 Unicode 的支持</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">print</span> <span class="string">u'\u4f60\u597d'</span></div><div class="line">你好</div><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">u'你好'</span></div><div class="line"><span class="string">u'\u4f60\u597d'</span></div></pre></td></tr></table></figure>
<p>当然，字母也是可以使用这个方式转换，不多说。</p>
<h4 id="格式化"><a href="#格式化" class="headerlink" title="格式化"></a>格式化</h4><p>与 C 一样，用 % 实现的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello %s'</span> % <span class="string">'Zhanglf'</span></div><div class="line"><span class="string">'Hello Zhanglf'</span></div></pre></td></tr></table></figure>
<p>整数 d ，浮点数 f ，字符串 s ，十六进制整数 x 。</p>
<p>多个一起格式化的时候，</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">'Hello %s,%d'</span> % (<span class="string">'Zhanglf'</span>,<span class="number">886</span>)</div><div class="line"><span class="string">'Hello Zhanglf,886'</span></div></pre></td></tr></table></figure>
<p>括号起来，逗号隔开。</p>
<h3 id="循环和判断"><a href="#循环和判断" class="headerlink" title="循环和判断"></a>循环和判断</h3><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><p>有两种循环，一种是 <code>while</code> 循环</p>
<p>很简单，<strong>注意</strong>缩进和冒号</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">n = <span class="number">0</span></div><div class="line">s = <span class="number">0</span></div><div class="line"><span class="keyword">while</span> n &lt; <span class="number">100</span>:</div><div class="line">    s += n</div><div class="line">    n += <span class="number">1</span></div><div class="line"><span class="keyword">print</span> (s)</div></pre></td></tr></table></figure>
<p>py 不支持 ++ 运算符？ 我试了不行。</p>
<p>还有一种是 <code>for in</code></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">listttt = [<span class="string">'lll'</span>,<span class="string">'iii'</span>,<span class="string">'sss'</span>,<span class="string">'ttt'</span>];</div><div class="line"><span class="keyword">for</span> list <span class="keyword">in</span> listttt:</div><div class="line">    <span class="keyword">print</span> list</div></pre></td></tr></table></figure>
<p>像是 Java 中的增强 <code>for</code> 循环。</p>
<p>另外有一个 <code>range()</code> 函数，可以生成一个整数序列：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>range(<span class="number">6</span>)</div><div class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div></pre></td></tr></table></figure>
<h4 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h4><p>逻辑和一般语言都一样。</p>
<p>条件判断，多重判断的时候，用 <code>elif</code> 而不是 <code>else if</code>，<strong>注意</strong>缩进和冒号。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">age = <span class="number">20</span></div><div class="line"><span class="keyword">if</span> age &gt;= <span class="number">6</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">'teenager'</span></div><div class="line"><span class="keyword">elif</span> age &gt;= <span class="number">18</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">'adult'</span></div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">'kid'</span></div></pre></td></tr></table></figure>
<h3 id="list-和-tuple"><a href="#list-和-tuple" class="headerlink" title="list 和 tuple"></a>list 和 tuple</h3><h4 id="list"><a href="#list" class="headerlink" title="list"></a>list</h4><p>中括号表示。</p>
<p>list 和 Java 的集合没差，有序，可重复，可变。但是它可以存不同类型的元素，（其实 Java 的集合也行）甚至是别的 list。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>listtt = [<span class="number">33</span>,<span class="number">44</span>,<span class="string">'zlf'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>listtt</div><div class="line">[<span class="number">33</span>, <span class="number">44</span>, <span class="string">'zlf'</span>]</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>len(listtt)</div><div class="line"><span class="number">3</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>listtt[<span class="number">1</span>]</div><div class="line"><span class="number">44</span></div></pre></td></tr></table></figure>
<p>获取长度 <code>len()</code><br>添加元素到末尾 <code>append()</code><br>添加元素到指定位置 <code>insert(索引，元素)</code><br>删除末尾元素 <code>pop()</code><br>删除指定位置的元素 <code>pop(索引)</code><br>替换元素，直接通过索引赋值</p>
<p>最后，如果，list 里面嵌套了 list，就变成多维集合了。</p>
<h4 id="tuple"><a href="#tuple" class="headerlink" title="tuple"></a>tuple</h4><p>小括号表示。</p>
<p>元组: 有序，不可变。安全。</p>
<p>tuple 不可变。但是如果里面有元素是 list，那么其中的 list 是可以改变的。</p>
<p>有一个要<strong>注意的地方</strong>，</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>tupleee = (<span class="number">1</span>)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tupleee</div><div class="line"><span class="number">1</span></div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tupleee = (<span class="number">1</span>,)</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>tupleee</div><div class="line">(<span class="number">1</span>,)</div></pre></td></tr></table></figure>
<p>因为（1） 中的括号就是普通的数学括号，所以 py 官方规定如果是那种情况要初始化，记得加个逗号。</p>
<h3 id="dict-和-set"><a href="#dict-和-set" class="headerlink" title="dict 和 set"></a>dict 和 set</h3><h4 id="dict"><a href="#dict" class="headerlink" title="dict"></a>dict</h4><p>花（大）括号表示。</p>
<p>dict 就是 iOS 中常说的字典，全称 dictionary ，Java 中的 Map，是以键值对存储的。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding: utf-8 -*-</span></div><div class="line">dicttt = &#123;<span class="string">"zlf"</span>:<span class="number">24</span>,<span class="string">"hei"</span>:<span class="number">23</span>,<span class="string">"ha"</span>:<span class="number">24</span>&#125;</div><div class="line"><span class="comment"># 通过 key 找 value</span></div><div class="line"><span class="keyword">print</span> dicttt[<span class="string">'zlf'</span>]</div><div class="line"><span class="comment"># 或者是</span></div><div class="line"><span class="keyword">print</span> dicttt.get(<span class="string">'zlf'</span>)</div><div class="line"><span class="comment"># 最好是使用,</span></div><div class="line"><span class="keyword">print</span> dicttt.get(<span class="string">'zlf'</span>,<span class="number">-1</span>)</div></pre></td></tr></table></figure>
<p>不能通过 value 找 key，因为 dict 是无序不重复的，也就是说 key 值是唯一的，所以</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">dicttt = &#123;<span class="string">"zlf"</span>:<span class="number">24</span>,<span class="string">"hei"</span>:<span class="number">23</span>,<span class="string">"ha"</span>:<span class="number">24</span>,<span class="string">"ha"</span>:<span class="number">24</span>,<span class="string">"zlf"</span>:<span class="number">24</span>,<span class="string">"hei"</span>:<span class="number">23</span>,<span class="string">"ha"</span>:<span class="number">24</span>,<span class="string">"ha"</span>:<span class="number">24</span>&#125;</div><div class="line"><span class="keyword">print</span> dicttt</div></pre></td></tr></table></figure>
<p>输出的也是</p>
<p><code>{&#39;zlf&#39;: 24, &#39;ha&#39;: 24, &#39;hei&#39;: 23}</code></p>
<p>与 Map 一样，查找 value 用的是 Hash 算法，时间复杂度是常数，典型的用空间换时间。</p>
<h4 id="set"><a href="#set" class="headerlink" title="set"></a>set</h4><p>比较特殊的单列集合，和 Java 的 Set 一样，无序，不可重复。</p>
<p>初始化有一点特殊：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&gt;&gt;&gt; </span>settt = set([<span class="string">'s'</span>,<span class="string">'e'</span>,<span class="string">'t'</span>])</div><div class="line"><span class="meta">&gt;&gt;&gt; </span>settt</div><div class="line">set([<span class="string">'s'</span>, <span class="string">'e'</span>, <span class="string">'t'</span>])</div></pre></td></tr></table></figure>
<p>其中的中括号并不是代表存入的是 list ！ 添加相同的元素会被自动过滤。</p>
<p>和 dict 一样不可存入变量当做是 key，因为为了保证 key 值是唯一的，而变量可能导致多个 key 值相同。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;格式&quot;&gt;&lt;a href=&quot;#格式&quot; class=&quot;headerlink&quot; title=&quot;格式&quot;&gt;&lt;/a&gt;格式&lt;/h3&gt;&lt;p&gt;注释用 &lt;code&gt;#&lt;/code&gt; 开头表示。&lt;/p&gt;
&lt;p&gt;语法采用缩进的方式，虽然没有规定是几个空格，但是一般都是 4 个。 &lt;/p&gt;
&lt;p&gt;大小写敏感。&lt;/p&gt;
&lt;p&gt;通常我们在开头这么写：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://yoursite.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>关于 Drawable（二）</title>
    <link href="http://yoursite.com/2017/05/04/%E5%85%B3%E4%BA%8E-Drawable%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://yoursite.com/2017/05/04/关于-Drawable（二）/</id>
    <published>2017-05-04T02:43:00.000Z</published>
    <updated>2017-05-04T07:02:53.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="layer-list"><a href="#layer-list" class="headerlink" title="layer-list"></a>layer-list</h3><p>类似于 FrameLayout，将列表中的 item 叠加在一块，最后的 item 显示在最前面。</p>
<a id="more"></a>
<h4 id="item"><a href="#item" class="headerlink" title="item"></a>item</h4><p>layer-list 子项,之后会细说，相当于是一个自定义性很强的图层，可以接受 bitmap 。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/52eb2279jw1f2rx409pcnj2044048mx5.jpg" alt="52eb2279jw1f2rx409pcnj2044048mx5"></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">layer-list</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">bitmap</span></span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/huaji"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">bitmap</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span></span></div><div class="line">        <span class="attr">android:left</span>=<span class="string">"280dp"</span></div><div class="line">        <span class="attr">android:top</span>=<span class="string">"280dp"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">bitmap</span></span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/huaji"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">bitmap</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">item</span></span></div><div class="line">        <span class="attr">android:right</span>=<span class="string">"280dp"</span></div><div class="line">        <span class="attr">android:top</span>=<span class="string">"280dp"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">bitmap</span></span></div><div class="line">            <span class="attr">android:src</span>=<span class="string">"@drawable/huaji"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">bitmap</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">item</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">layer-list</span>&gt;</span></div></pre></td></tr></table></figure>
<p>item 可以通过 top 、 right 、bottom 、 left 来调整位置。</p>
<p>效果是这样的:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-04 上午11.15.20.png" alt="屏幕快照 2017-05-04 上午11.15.20"></p>
<p>底层那张怎么为什么那么大？</p>
<p>我是这样理解的，一开始的时候，有一个边框，大小就是第一个 item 的默认大小，当我们加入第二个 item 时，容器就被扩充了，所以之前的 item 跟着变大了，可以参考下图</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/huaji.jpg" alt="huaji"></p>
<p>但是当我们给第一个 item 设置一个 <em>gravity</em> 属性的时候，比如 <code>android:gravity=&quot;center&quot;</code>,<br>就会变成这样</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-04 上午11.33.28.png" alt="屏幕快照 2017-05-04 上午11.33.28"></p>
<p>根据上面的框图，这也不难理解，由于有了方向，所以 item 1 就没有再占满边框，而是变成了默认大小。</p>
<p>最后有一个比较有意思地方，当给 item 都设置 tileMode 属性的时候，结果可能和你想的不一样哦。</p>
<p>–</p>
<p>最后附上滑稽的 png 资源</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/huaji.png" alt="huaji"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;layer-list&quot;&gt;&lt;a href=&quot;#layer-list&quot; class=&quot;headerlink&quot; title=&quot;layer-list&quot;&gt;&lt;/a&gt;layer-list&lt;/h3&gt;&lt;p&gt;类似于 FrameLayout，将列表中的 item 叠加在一块，最后的 item 显示在最前面。&lt;/p&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>关于 Drawable（一）</title>
    <link href="http://yoursite.com/2017/05/03/%E5%85%B3%E4%BA%8E-Drawable%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://yoursite.com/2017/05/03/关于-Drawable（一）/</id>
    <published>2017-05-03T08:50:49.000Z</published>
    <updated>2017-05-04T02:49:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>这里的 Drawable 指的是 Android 项目中 res/drawable 下的资源。</p>
<p>例如: </p>
<p>.9 图、 .png 、 .jpg 等位图文件， xml 格式的可绘制对象等等。</p>
<a id="more"></a>
<h3 id="位图文件"><a href="#位图文件" class="headerlink" title="位图文件"></a>位图文件</h3><p>关于位图文件，Google 官方首先推荐使用的是 .png ，其次是 .jpg ，以及不建议使用的 .gif 文件。</p>
<pre><code>Tip: 当出现如下错误的时候，

Error:Execution failed for task &apos;:app:mergeDebugResources&apos;.
Error: java.util.concurrent.ExecutionException: com.android.ide.common.process.ProcessException: `

可能是你将 .jpg 格式图片的后缀改成了 .png 放到 drawable 目录下了。
</code></pre><p>另外，drawable 中的文件名称格式有一定的<strong>要求</strong>：</p>
<pre><code>File-based resource names must contain only lowercase a-z, 0-9, or underscore
</code></pre><p>位图文件的<strong>使用</strong>很简单:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">      <span class="attr">android:layout_width</span>=<span class="string">"50dp"</span></div><div class="line">      <span class="attr">android:src</span>=<span class="string">"@drawable/bitmap_test"</span></div><div class="line">      <span class="attr">android:layout_height</span>=<span class="string">"50dp"</span>/&gt;</div></pre></td></tr></table></figure>
<p>或者用 <code>background</code> 。</p>
<p>其中 <code>src</code> 和 <code>background</code> 的主要区别是，前者不会根据 <code>ImageView</code> 控件的大小拉伸原图。</p>
<p><code>src</code> 的样式可以通过 <code>scaleType</code> 设置，而 <code>alpha</code> 属性可以作用于 <code>background</code> 。两者可以同时作用，<code>src</code> 在前，<code>background</code> 在后。</p>
<p>关于 <em>scaleType</em> 的不同类型，可以用一张图来说明:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午5.28.55.png" alt="屏幕快照 2017-05-03 下午5.28.55"></p>
<p>其中 <code>centerCrop</code> 和 <code>center</code> 用的最多。</p>
<h3 id="XML-中-的位图"><a href="#XML-中-的位图" class="headerlink" title="XML 中 的位图"></a>XML 中 的位图</h3><p>有以下这些属性:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">bitmap</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@drawable/huaji"</span></div><div class="line">        <span class="attr">android:alpha</span>=<span class="string">"100"</span></div><div class="line">        <span class="attr">android:antialias</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:autoMirrored</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:dither</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:filter</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"bottom"</span></div><div class="line">        <span class="attr">android:tileMode</span>=<span class="string">"repeat"</span></div><div class="line">        <span class="attr">android:mipMap</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:tileModeX</span>=<span class="string">"mirror"</span></div><div class="line">        <span class="attr">android:tileModeY</span>=<span class="string">"mirror"</span></div><div class="line">        <span class="attr">android:tintMode</span>=<span class="string">"src_over"</span></div><div class="line">        <span class="attr">android:tint</span>=<span class="string">"null"</span></div><div class="line">    /&gt;</div></pre></td></tr></table></figure>
<ul>
<li><code>src</code> 是一定要求有的，是图片资源地址。</li>
</ul>
<ul>
<li><p><code>alpha</code> 图片的透明度。</p>
</li>
<li><p><code>antialias</code> 是否抗锯齿。</p>
</li>
<li><p><code>autoMirrored</code> 否是镜像反转，当布局是从右往左的时候才有用。</p>
</li>
<li><p><code>dither</code> 是否使用位图抖动，当图片像素高于设备配置的时候会用到，它能让图片的显示更加平滑，具体可以点<a href="https://en.wikipedia.org/wiki/Dither" target="_blank" rel="external">这里</a>。</p>
</li>
</ul>
<p>下面的几张图片中， 1 是原图，2 和 3 都是用的同一个<a href="https://en.wikipedia.org/wiki/Web_colors#Web-safe_colors" target="_blank" rel="external">调色板</a>，但是 3 用了<a href="https://en.wikipedia.org/wiki/Floyd%E2%80%93Steinberg_dithering" target="_blank" rel="external">位图抖动算法</a>，看上去更加的平滑。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午8.06.48.png" alt="屏幕快照 2017-05-03 下午8.06.48"></p>
<ul>
<li><p><code>filter</code> 当图片进行了压缩或者拉伸时，使用该属性可以使得图片的外观更加的平滑。</p>
</li>
<li><p><code>gravity</code> 这个很理解，和普通的控件中也有，该属性对应的值有点 <code>left</code>、<code>top</code> 、<code>right</code> 之类的，用来设置图片在控件中的位置或者说是对齐方式。</p>
</li>
<li><p><code>tileMode</code> tile 是瓷砖，瓦片的意思。该属性用来设置图片的平铺方式，有四种不同的值：</p>
<ul>
<li><p><code>disable</code> 默认值，无平铺方式</p>
</li>
<li><p><code>repeat</code> 重复的铺满，如下图</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午4.37.48.png" alt="屏幕快照 2017-05-03 下午4.37.48"></p>
</li>
<li><p><code>mirror</code> 镜像的方式，如下图</p>
</li>
</ul>
</li>
</ul>
<p>   <img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午4.37.57.png" alt="屏幕快照 2017-05-03 下午4.37.57"></p>
<ul>
<li><code>clamp</code> 效果如下图，其实拉伸的是图片最边缘的那个像素点上的值。</li>
</ul>
<pre><code>![屏幕快照 2017-05-03 下午4.38.09](http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午4.38.09.png)
</code></pre><ul>
<li><p><code>mipMap</code> 这个属性有点邪乎，可以参考<a href="https://developer.android.google.cn/reference/android/graphics/Bitmap.html#setHasMipMap(boolean" target="_blank" rel="external">里面</a>)，大致意思应该是，当你要绘制的 bitmap 小于 50% 原图的时候，开启该属性可以提供更高质量的画质。（但是使用该属性，需要额外的内存开销，并且是 Android 4.2 及以上才能用，而且！用了不一定真的有用哦，它只是给渲染器的一个建议）</p>
</li>
<li><p><code>tileMoteX</code> 和<code>tileMoteY</code> 都是 Android 5.0 及之后才有的属性，和 <code>tileMote</code> 的性质一样，只是多了方向上的区别。</p>
</li>
<li><p><code>tintMode</code> 也是 Android 5.0 及之后才有的，这个属性是配合 <code>tint</code> 来一起使用的。</p>
<p>  <img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午8.37.25.png" alt="屏幕快照 2017-05-03 下午8.37.25"></p>
</li>
</ul>
<p>我们来玩一把，在 <code>android:tint=&quot;#0f0&quot;</code> 的条件下，改变 <code>tintMode</code>：</p>
<ul>
<li><p>当值为 <code>src_over</code> 或者 <code>src_in</code> 或者 <code>src_atop</code> 的时候得到的图形都一样(这里一开我也是用的滑稽的图片，但是由于滑稽图是 .jpg 格式的，于是在这三种模式下就会变成全绿，所以用了 .png 的图片演示)</p>
<p> <img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午8.59.59.png" alt="屏幕快照 2017-05-03 下午8.59.59"></p>
</li>
<li><p>当值为 <code>add</code> 的时候</p>
<p> <img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午8.46.42.png" alt="屏幕快照 2017-05-03 下午8.46.42"></p>
</li>
</ul>
<ul>
<li><p>当值为 <code>multiply</code> 的时候</p>
<p> <img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午8.47.03.png" alt="屏幕快照 2017-05-03 下午8.47.03"></p>
</li>
</ul>
<ul>
<li><p>当值为 <code>screen</code> 的时候</p>
<p> <img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-03 下午8.47.35.png" alt="屏幕快照 2017-05-03 下午8.47.35"></p>
</li>
</ul>
<p>–</p>
<p><a href="https://zh.wikipedia.org/wiki/Wikipedia:%E9%A6%96%E9%A1%B5" target="_blank" rel="external">参考链接</a></p>
<p> <a href="https://developer.android.google.cn/guide/topics/resources/drawable-resource.html" target="_blank" rel="external">Google 官方 API</a></p>
<p><a href="http://android.jobbole.com/82117/" target="_blank" rel="external">Android 样式的开发：drawable 汇总篇</a></p>
<p><a href="http://blog.csdn.net/crazymo_/article/details/48941781" target="_blank" rel="external">Android 入门 —— Drawable 与对应的资源 xml 的应用</a></p>
<p><a href="http://www.cnblogs.com/ai394495243/p/5075758.html?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">Android 5.x 新特性之 elevation (阴影),tinting（着色）以及 clipping（剪裁）</a></p>
<p><a href="http://blog.csdn.net/zhuoxiuwu/article/details/50976337" target="_blank" rel="external">Andorid-Tint使用与原理解析</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这里的 Drawable 指的是 Android 项目中 res/drawable 下的资源。&lt;/p&gt;
&lt;p&gt;例如: &lt;/p&gt;
&lt;p&gt;.9 图、 .png 、 .jpg 等位图文件， xml 格式的可绘制对象等等。&lt;/p&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>黑客与画家</title>
    <link href="http://yoursite.com/2017/05/01/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/"/>
    <id>http://yoursite.com/2017/05/01/黑客与画家/</id>
    <published>2017-05-01T14:19:30.000Z</published>
    <updated>2017-05-01T14:25:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>Lisp</p>
<p>Lisp</p>
<p>Lisp</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lisp&lt;/p&gt;
&lt;p&gt;Lisp&lt;/p&gt;
&lt;p&gt;Lisp&lt;/p&gt;

    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="读书笔记" scheme="http://yoursite.com/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>5月小目标</title>
    <link href="http://yoursite.com/2017/05/01/5%E6%9C%88%E5%B0%8F%E7%9B%AE%E6%A0%87/"/>
    <id>http://yoursite.com/2017/05/01/5月小目标/</id>
    <published>2017-05-01T08:17:32.000Z</published>
    <updated>2017-05-01T08:52:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>好好想想四月的所作所为，给五月定几个小目标。</p>
<a id="more"></a>
<p>一不小，五一小长假就要结束了。</p>
<p>意味着，已经五月份了。</p>
<p>来杭州快两个月了，到新的公司也有40多天了，自己都不相信。</p>
<p>自己都做了什么事情呢。</p>
<p>工作上也就前一周有具体的安排任务，完成的自我感觉算还好，不过这还是要下周测试说了算，觉得自己还是存在很多不足的。</p>
<p>很多方面经验尚显不足，例如，有些实现方式，其实找后端可以比较轻松的实现，但是都是自己通过比较复杂的途径实现的，当然从另一方面来说也是有一定好处的。不过多一种解决方案总归不是错的。</p>
<p>心还是没有定下来，有点浮躁。这个说的有点玄乎，但是思想上面的玩意本身就是很难描述清楚的。或许就自己能更深切的体会到吧。</p>
<p>许多时候，虽然在看一些知识点，但是完全看不进去，就像是在装模作样似的，非常的奇葩，因为其实根本没有必要。也不知道自己是装模作样给谁看，现在想想，可能是为了假装自己不闲。？</p>
<p>欺骗自己是最恐怖的事情。对的，这个月要坚决不做那种恐怖的事情。一是一，二是二。要学一个东西，必须要深入的学，不能光学表面。这个深入，是能有多深就要有多深。一定要深到自己的极限。要坚信，付出终有回报，基础扎实，之后才能事半功倍。</p>
<p>不是说要自己给自己喂毒鸡汤，而是要在自己可能要松懈的时候，给自己打一波鸡血，持之以恒，养成习惯。</p>
<p>五一这三天确实有点玩够了，漫展回来又看了一天的动漫，一方面来说这并没有什么错。但是还是觉得有点浪费时间，好在该看的都看完了。</p>
<p>要习惯每天都做一些有一点意义但可能不是很有趣的事情，每天！   做自己应该做而不是想做事的。</p>
<p>人在没有明确目标的时候，如果陷入选择就会自然而然选择放松安逸，所以每天的目标都要非常的明确。现在是白天都会定目标，可是晚上回来要做什么却都没有写下来。而晚上的时间又是最自由，对自己最重要的。所以晚上的安排非非非常的重要。这个思考过程可以放在下班回来的地铁上，5 到 10 分钟完成。</p>
<p>这个月的小目标就是，努力的去完成这个月每天的小目标，白天和晚上的，然后记录下来，给自己打分。</p>
<p>还有安卓知识点的收集和更新，每周至少看一个新的小知识点，或者类库的使用的，最好是能深入理解分析。</p>
<p>你现在处在一个非常非常重要的阶段，要么一辈子当一个底层的打工码农，要么，天高海阔，自己来选。</p>
<p>最后，希望自己能多看书，除了技术的。 一个月至少至少看一本书。  </p>
<p>花在豆瓣和掘金的时间超过微信和 UC 。 </p>
<p>这个月就把没看完的 《希特勒传上》看完，以及《天才疯子》全部。  最好是能够写总结。</p>
<p>12 12 12 12 12 点之前睡觉，不不不不不不不不要睡前玩玩玩玩手机。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好好想想四月的所作所为，给五月定几个小目标。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="小目标" scheme="http://yoursite.com/tags/%E5%B0%8F%E7%9B%AE%E6%A0%87/"/>
    
  </entry>
  
  <entry>
    <title>Android 知识点 4.28</title>
    <link href="http://yoursite.com/2017/04/28/Android-%E7%9F%A5%E8%AF%86%E7%82%B9-4-28/"/>
    <id>http://yoursite.com/2017/04/28/Android-知识点-4-28/</id>
    <published>2017-04-28T13:48:11.000Z</published>
    <updated>2017-05-01T14:14:31.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>好记性不如破键盘</p>
</blockquote>
<a id="more"></a>
<p>设计给了张差不多是这样的一张图。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-28 下午8.56.05.png" alt="屏幕快照 2017-04-28 下午8.56.05"></p>
<p>编辑栏可以自由的添加文字或者是图片。</p>
<p>这玩意安卓原生控件肯定是不好搞。</p>
<p>（写到这我有种怪异的感觉，因为我现在的界面是这样的:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-28 下午9.00.58.png" alt="屏幕快照 2017-04-28 下午9.00.58"></p>
<p>这不就和那个设计给的图的的效果几乎一样吗？）</p>
<p>通过 HTML 标签来解决，上面的编辑框就类似于是一个低配版的 MarkDown 编辑器显示框，而我们要传给服务器的就是那些带标签的字符串。</p>
<p>这玩意有个好听的叫富文本。</p>
<p>秉着不重复造轮子的态度，我 Github 了一下。（其实根本造不动）</p>
<p>就是它 <a href="https://github.com/wasabeef/richeditor-android" target="_blank" rel="external">RichEditor</a> ，好家伙，快 3k 的星了。</p>
<p>直接下载，运行了下。除了图片死活出不来，别的都还好，（不是很清楚为什么出不来，因为我在自己项目里面跑起来了，而且我也改了 Demo 中的 url 了，还是不行，就没管了）。</p>
<p>其实这个源码很少，而且不复杂。由于我只要图文，所以来看看图片是怎么实现的。</p>
<p>使用方法很简单，只要</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mRichEdit.insertImage(mHttpUrlPathArray.get(i),<span class="string">"商品详情"</span>);</div></pre></td></tr></table></figure>
<p>前一个参数是图片的 url（注意是 url ，不是什么本地缓存之类的绝对路径），后一个是图片的 alt 。</p>
<p>点进去看看是怎么实现的:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertImage</span><span class="params">(String url, String alt)</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.prepareInsert();"</span>);</div><div class="line">  exec(<span class="string">"javascript:RE.insertImage('"</span> + url + <span class="string">"', '"</span> + alt + <span class="string">"');"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>说实话这个 RE 我还真不知道是什么东西，甚至我 Google 不到，原谅我菜。</p>
<p>但是我是这么想的，其实这并不是 js 库里面的什么对象，而只是，该类名 RichEditor 的缩写，MDZZ。</p>
<p>该类中有特别多的这种写法:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">redo</span><span class="params">()</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.redo();"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBold</span><span class="params">()</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.setBold();"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setItalic</span><span class="params">()</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.setItalic();"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSubscript</span><span class="params">()</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.setSubscript();"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSuperscript</span><span class="params">()</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.setSuperscript();"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setStrikeThrough</span><span class="params">()</span> </span>&#123;</div><div class="line">  exec(<span class="string">"javascript:RE.setStrikeThrough();"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>因为图片都是属于插入的形式，所以会多了一个 <code>prepareInsert()</code> 步骤。</p>
<p>然后拼接下字符串，再进行下判断:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">exec</span><span class="params">(<span class="keyword">final</span> String trigger)</span> </span>&#123;</div><div class="line">  <span class="keyword">if</span> (isReady) &#123;</div><div class="line">    load(trigger);</div><div class="line">  &#125; <span class="keyword">else</span> &#123;</div><div class="line">    postDelayed(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">      <span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">        exec(trigger);</div><div class="line">      &#125;</div><div class="line">    &#125;, <span class="number">100</span>);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个 <code>isReady</code> 是 WebViewClient 类中的生命周期中获取到的:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">  isReady = url.equalsIgnoreCase(SETUP_HTML);</div><div class="line">  <span class="keyword">if</span> (mLoadListener != <span class="keyword">null</span>) &#123;</div><div class="line">    mLoadListener.onAfterInitialLoad(isReady);</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果没有准备好就延时 0.1 秒再执行，准备好了就真正的执行了:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">load</span><span class="params">(String trigger)</span> </span>&#123;</div><div class="line">   <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">     evaluateJavascript(trigger, <span class="keyword">null</span>);</div><div class="line">   &#125; <span class="keyword">else</span> &#123;</div><div class="line">     loadUrl(trigger);</div><div class="line">   &#125;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<p>为了兼容不同版本 Android 系统的 WebView 做了判断，然后就是底层代码调用了。</p>
<p>补充说明：Build.VERSION_CODES.KITKAT 就是 19，也就是安卓 4.4 ,它之前的版本用的是 <a href="https://webkit.org/" target="_blank" rel="external">WebKit内核</a>，之后的版本用的是 <a href="http://www.chromium.org/" target="_blank" rel="external">Chromium 内核</a>。</p>
<p>两个内核的一些区别：</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-28 下午9.57.42.png" alt="屏幕快照 2017-04-28 下午9.57.42"></p>
<p>好了，主要知道使用是 <code>insertImage()</code> 方法就好了。然后就会遇到一个坑。</p>
<p>图片的大小，用安卓原生方法是控制不了的因为，那个东西是存在于类似网页中的。</p>
<p>所以在这里我纠结了挺久的，在想是不是要通过拼接 width 之类的 Img 属性上去。但是这样要修改 RE 中 <code>setImg</code> 的方法，觉得可能搞不定。于是我就想着看看别的一些类库都是怎么实现的。</p>
<p>于是看了几个也是挺受欢迎的库，像是<a href="https://github.com/xmuSistone/android-animate-RichEditor" target="_blank" rel="external">这个</a>和<a href="https://github.com/KDF5000/RichEditText" target="_blank" rel="external">这个</a>。</p>
<p>这两个库都是自动处理图片大小的。第一个在图片的右上角还有删除按钮，以及删除图片的动画，感觉特别人性化。</p>
<p>但是，两者都是通过绝对路径来确认图片以及用原生控件来展示的。（好像也行啊，无语）</p>
<p>所以··· 解决方法用 CSS 直接一点。</p>
<p>这个问题在 <a href="https://github.com/wasabeef/richeditor-android/issues/47" target="_blank" rel="external">Issues</a> 中也是有人反映过，而且知情人士也给出了简单好用的解决方案具体步骤:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-28 下午10.06.01.png" alt="屏幕快照 2017-04-28 下午10.06.01"></p>
<p>然后就好了，亲测，好用。</p>
<p>好吧，我承认。结尾很潦草。</p>
<p>明天就是五一小长假了。这一不小心十点了啊。我要出去买点吃的，就先这样。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;好记性不如破键盘&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>我是做安卓的    吗</title>
    <link href="http://yoursite.com/2017/04/27/%E6%88%91%E6%98%AF%E5%81%9A%E5%AE%89%E5%8D%93%E7%9A%84/"/>
    <id>http://yoursite.com/2017/04/27/我是做安卓的/</id>
    <published>2017-04-27T13:43:14.000Z</published>
    <updated>2017-04-27T14:50:05.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>IOS 和 Android 的 UI 应该一模一样吗</strong></p>
<p>我想在 Banner 上加了个切换的动画，已经做好了，设计的第一反应是不行，之后觉得说的太绝对又补充说，如果想要加也可以，也要让 IOS 加上。</p>
<a id="more"></a>
<p>虽然我全家人都用 IPhone ，但是我几乎没用过，所以我没什么对比的，但是我记得微信首页就不一样，于是我就那么说了下。</p>
<p>设计的意思是，那是因为没办法，但是我们要尽可能的让 APP 保持一致，就是说，如果你们开发的技术够硬，两个端的 APP 一模一样最好了。</p>
<p>说到这，我想，大部分有 Android 开发经历的应该都可以想象到了，那设计给我的肯定是纯纯的 IOS 风格的界面了。</p>
<p>其实当时我就想问了，你看过 Google 的关于 Android 的设计规范吗，估计 Material Design 是什么都没听过。当然，我也不是很懂，我只是一个开发，控油设计心，但是对于天天对着 Android 机，给它一遍一遍的装卸 IOS 风格的 APP 真是烦躁。</p>
<p>不用多说，放两张图就够了。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-27 下午10.02.23.png" alt="屏幕快照 2017-04-27 下午10.02.23"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-27 下午10.03.16.png" alt="屏幕快照 2017-04-27 下午10.03.16"></p>
<p>首先，我真是不懂为什么那么喜欢白色白色白色，而且这纯白顶部框配上那左上角的黑色返回箭头，那满满的苹果风。还有位于最底部的提交按钮，好吧。</p>
<p>还有那个提示框，哎。</p>
<p>其实我真心知道，一般来说设计不可能给开发人员两套 UI 设计，除非他是吃饱了撑的。</p>
<p>另一个方面，肯定要说是为了 Android 端的用户切换的 IOS 不适应啊(一般 IOS 换 Android 还是比较少的)，我们要保持一致性啊啥的。可是我想说，人家两个不同系统都适应过来了，会不适应这小小的 APP 的转换吗。</p>
<p>当然，如果是大厂，比如微信，支付宝之类的，可能会尽量保持一致，因为可能有人同时用多部不同系统的手机，而且大厂极致追求稳定，统一。但是即便如此，他们的设计更多也是追求中立，至少我看的是这样，没有出现白顶配黑箭头的这种风格。 我甚至在淘宝中见到过很多 Android 风的小交互。 没有对比不是很清楚 IOS 端是否实现，但是我更愿意相信这个是某些 Android 人的主动请求添加，因为喜欢。</p>
<p>哦，像知乎，掘金这种 APP 就别说了，打死我也不信 IOS 也是这样。</p>
<p>一个小小的按钮就提现出来了。</p>
<p>怎么说呢，很多程度上和软件的性质和用户群体也密切相关。</p>
<p>能用这种 APP 的人，那种交互或者界面的调整对他们来说，学习成本几乎为 0。甚至他们会更喜欢看到那种不一样。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-27 下午10.23.01.png" alt="屏幕快照 2017-04-27 下午10.23.01"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-27 下午10.22.54.png" alt="屏幕快照 2017-04-27 下午10.22.54"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-27 下午10.23.17.png" alt="屏幕快照 2017-04-27 下午10.23.17"></p>
<p>很遗憾，我在公司做出来的东西都长右边那样。</p>
<p>领导肯定觉得做一样的东西，需要的资源更少，他们关心的是速度，快就好了。但是对于许多的 IOS 效果，Android 更多的是要去造轮子，虽然 Github 上面一搜一大堆。但真是感到莫名的想笑。Google 的程序员做好了放那给我们用，我们却只能再去自定义另一种风格的相同东西出来。</p>
<p>上次我做一个图片预览的功能，我想到了之前看到的结合 PhotoView 做出来的仿照微信朋友圈的交互效果，真的很酷，兴致冲冲的做了。</p>
<p>做好了，我给设计看，问能不能加上这个，可是设计问我，为什么要加上这个呢，拖来拖去有什么用？</p>
<p>多说无益，我直接说微信这么做的。看他反应我知道她肯定没尝试拖过，估计她也是觉得没人会在我们这 APP 上拖那预览的照片，所以选择默认了。</p>
<p>我有点失落的是，有点感慨，我更希望微信那个拖拽动作是设计提出来的，而不是程序员。</p>
<p>因为那样的设计，比程序员，少太多了。</p>
<p>不同的系统的东西，应该<strong>尽量</strong>的去不一样，毕竟他们连系统都不一样。</p>
<p>本来应该写代码的，结果写这个了破玩意，真的是 ZZ 。</p>
<p>还有一句话开发肯定都不陌生。</p>
<p>支付宝，微信都这么做了，我们也这么做。</p>
<p>理由？要吗？</p>
<p><a href="https://webdesign.tutsplus.com/articles/a-tale-of-two-platforms-designing-for-both-android-and-ios--cms-23616" target="_blank" rel="external">友情链接1</a><br><a href="https://www.zhihu.com/question/40430299" target="_blank" rel="external">友情链接2</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;IOS 和 Android 的 UI 应该一模一样吗&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;我想在 Banner 上加了个切换的动画，已经做好了，设计的第一反应是不行，之后觉得说的太绝对又补充说，如果想要加也可以，也要让 IOS 加上。&lt;/p&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="Android IOS" scheme="http://yoursite.com/tags/Android-IOS/"/>
    
  </entry>
  
  <entry>
    <title>Android 知识点 4.25</title>
    <link href="http://yoursite.com/2017/04/25/Android-%E7%9F%A5%E8%AF%86%E7%82%B9-4-25/"/>
    <id>http://yoursite.com/2017/04/25/Android-知识点-4-25/</id>
    <published>2017-04-25T14:05:23.000Z</published>
    <updated>2017-05-01T14:17:23.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>好记性不如破键盘</p>
</blockquote>
<a id="more"></a>
<p>设计给了差不多是这样一张图:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-25 下午11.22.16.png" alt="屏幕快照 2017-04-25 下午11.22.16"></p>
<p>So Easy ，一个 <code>shape</code> 加个 <code>radius</code> 就好啦，像这样:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">       <span class="attr">android:shape</span>=<span class="string">"rectangle"</span> <span class="attr">android:padding</span>=<span class="string">"10dp"</span>&gt;</div><div class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#5aaae2"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">corners</span></span></div><div class="line">        <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></div></pre></td></tr></table></figure>
<p>但是由于银行种类有十多种，颜色也不尽相同，这个时候由于我们是在 <code>background</code> 中直接设置 <code>drawable</code> 的，切换颜色的时候就会导致，圆角消失了。</p>
<p>除非你直接写十多个不同颜色的 <code>shape</code> ，那好像不大好…</p>
<p>所以我们要修改 <code>solid</code> 的中的颜色而不是 <code>background</code> 中的颜色。（ MDZZ 一开始我老是在想怎么加个圆角的外框，这样里面的颜色修改圆角就不会消失了，还是同事提醒我的）</p>
<p>Google 一下， 有人是这样解决的:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-25 下午11.29.08.png" alt="屏幕快照 2017-04-25 下午11.29.08"></p>
<p>就是说获取边框对象，创建 <code>GradientDrawable</code> 对象，用其 <code>setColor()</code> 方法动态的修改 <code>solid</code> 中的颜色。</p>
<p>好像很简单，我试了下，报错了。</p>
<p>和下面那哥们回复的差不多，类型转换错误，看来是 <code>getBackground()</code> 方法获取到的对象不一定是 <code>GradientDrawable</code> ，于是我添加了许多 ITEM，打了个 LOG ，<code>getBackground().getClass().toString()</code> ,将类型都打印了出来。</p>
<p>发现其中除了 <code>GradientDrawable</code> 还有 <code>ColorDrawable</code> ,再然后发现 <code>ColorDrawable</code> 也有动态设置 <code>solid</code> 颜色的方法。</p>
<p>那就简单了:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (holder.userinfo_layout.getBackground().getClass().toString().contains(<span class="string">"GradientDrawable"</span>)) &#123;</div><div class="line">    GradientDrawable background1 = (GradientDrawable) holder.userinfo_layout.getBackground();</div><div class="line">    background1.setColor(color);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    ColorDrawable background2 = (ColorDrawable) holder.userinfo_layout.getBackground();</div><div class="line">    background2.setColor(color);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>简单粗暴，KO。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;好记性不如破键盘&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android 知识点 4.24</title>
    <link href="http://yoursite.com/2017/04/24/Android-%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://yoursite.com/2017/04/24/Android-知识点/</id>
    <published>2017-04-24T14:22:22.000Z</published>
    <updated>2017-05-01T14:14:29.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>好记性不如破键盘</p>
</blockquote>
<a id="more"></a>
<h2 id="4-24"><a href="#4-24" class="headerlink" title="4.24"></a>4.24</h2><p>设计给了差不多是这样一张图:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/54A79C8D-0DCB-4789-BA39-BAB4C2709D23.png" alt="54A79C8D-0DCB-4789-BA39-BAB4C2709D23"></p>
<p>一个简单的 Dialog。</p>
<p>直接上 xml:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"240dp"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#0000"</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"190dp"</span></div><div class="line">        <span class="attr">android:layout_marginTop</span>=<span class="string">"40dp"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@drawable/bg_ad"</span></div><div class="line">        <span class="attr">android:gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></div><div class="line">        <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/dp70"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"提交成功"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"18sp"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/tv_dialog_descript"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"10dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"补充说明巴拉巴拉巴拉"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#646464"</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_dialog_ok"</span></div><div class="line">            <span class="attr">style</span>=<span class="string">"?android:attr/borderlessButtonStyle"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"40dp"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"18dp"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"@color/white"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:paddingTop</span>=<span class="string">"4dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"完成"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#1189ff"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"18sp"</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></div><div class="line">        <span class="attr">android:src</span>=<span class="string">"@drawable/classify523"</span>/&gt;</div><div class="line">    </div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>然后上代码：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">AlertDialog.Builder builder =</div><div class="line">                <span class="keyword">new</span> AlertDialog.Builder(context);</div><div class="line">        <span class="keyword">final</span> View dialogView = LayoutInflater.from(context)</div><div class="line">                .inflate(R.layout.yx_layout_common_dialog_new,<span class="keyword">null</span>);</div><div class="line">        TextView desc = (TextView) dialogView.findViewById(R.id.tv_dialog_descript);</div><div class="line"></div><div class="line">        desc.setText(message);</div><div class="line">        builder.setView(dialogView);</div><div class="line">        <span class="keyword">final</span> AlertDialog dialog = builder.create();</div><div class="line">        dialogView.findViewById(R.id.bt_dialog_ok).setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">                dialog.dismiss();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        dialog.show();</div></pre></td></tr></table></figure>
<p>好了？</p>
<p>运行起来，差不多是这样的:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-04-25 下午11.15.07.png" alt="屏幕快照 2017-04-25 下午11.15.07"></p>
<p>顶部不是透明的，可是明明我给顶部设置全透明了啊？</p>
<p>我在 xml 和代码中也设置过了就是不行，我怀疑是不是默认有一层纯色的背景。</p>
<p>最后是这样设置的：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dialog.getWindow().setBackgroundDrawable(<span class="keyword">new</span> ColorDrawable(<span class="number">0</span>));</div></pre></td></tr></table></figure>
<p>直接在 dialog 上设置了空的背景。</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;好记性不如破键盘&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>行万里路</title>
    <link href="http://yoursite.com/2017/04/22/%E8%A1%8C%E4%B8%87%E9%87%8C%E8%B7%AF/"/>
    <id>http://yoursite.com/2017/04/22/行万里路/</id>
    <published>2017-04-22T14:27:32.000Z</published>
    <updated>2017-05-01T09:07:04.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote class="blockquote-center"><p>今天的风儿好喧嚣 </p>
</blockquote>
<a id="more"></a>
<h2 id="2月"><a href="#2月" class="headerlink" title="2月"></a>2月</h2><h3 id="上海"><a href="#上海" class="headerlink" title="上海"></a>上海</h3><h4 id="海洋馆"><a href="#海洋馆" class="headerlink" title="海洋馆"></a>海洋馆</h4><p><img src="http://on9hzfn6s.bkt.clouddn.com/mmexport1492871826427.jpg" class="full-image"></p>
<h4 id="田子坊"><a href="#田子坊" class="headerlink" title="田子坊"></a>田子坊</h4><p><img src="http://on9hzfn6s.bkt.clouddn.com/mmexport1492871843218.jpg" class="full-image"></p>
<h4 id="泰晤士小镇"><a href="#泰晤士小镇" class="headerlink" title="泰晤士小镇"></a>泰晤士小镇</h4><p><em>三人游</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/mmexport1492871880623.jpg" class="full-image"></p>
<h4 id="辞职"><a href="#辞职" class="headerlink" title="辞职"></a>辞职</h4><p><em>再见上海，再见荣开，再见宅家，再见小伙伴</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/IMG_20160825_184452.jpg" class="full-image"></p>
<h2 id="3月"><a href="#3月" class="headerlink" title="3月"></a>3月</h2><h3 id="杭州"><a href="#杭州" class="headerlink" title="杭州"></a>杭州</h3><h4 id="朋友家"><a href="#朋友家" class="headerlink" title="朋友家"></a>朋友家</h4><p><em>初来乍到</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/IMG_20170306_170120.jpg" class="full-image"></p>
<h4 id="求职路上"><a href="#求职路上" class="headerlink" title="求职路上"></a>求职路上</h4><p><em>那座桥，看着不长，却要走很久</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/IMG_20170309_141543.jpg" class="full-image"></p>
<h4 id="杭州市图书馆"><a href="#杭州市图书馆" class="headerlink" title="杭州市图书馆"></a>杭州市图书馆</h4><p><em>如果我住在它隔壁多好</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/mmexport1492871897710.jpg" class="full-image"></p>
<h2 id="4月"><a href="#4月" class="headerlink" title="4月"></a>4月</h2><h3 id="杭州-1"><a href="#杭州-1" class="headerlink" title="杭州"></a>杭州</h3><h4 id="西湖大作战"><a href="#西湖大作战" class="headerlink" title="西湖大作战"></a>西湖大作战</h4><p><em>是的，一朵都没卖出去</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/IMG_20170408_130314.jpg" class="full-image"></p>
<h4 id="灵隐寺"><a href="#灵隐寺" class="headerlink" title="灵隐寺"></a>灵隐寺</h4><p><em>屡设山门为阻云</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/IMG_20170416_135137.jpg" class="full-image"></p>
<h4 id="西溪"><a href="#西溪" class="headerlink" title="西溪"></a>西溪</h4><p><em>左边一个小湖，右边一个小湖</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/IMG_20170423_094614.jpg" class="full-image"></p>
<h4 id="白马湖-漫展"><a href="#白马湖-漫展" class="headerlink" title="白马湖 漫展"></a>白马湖 漫展</h4><p><em>努力工作，发奋赚钱，手办、妹纸、福袋…</em></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/屏幕快照 2017-05-01 下午5.02.44.png" alt="屏幕快照 2017-05-01 下午5.02.44"></p>
<p>–</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=209326&auto=1&height=66"></iframe>

<div class="note default"><p>未完待续…</p>
</div>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote class=&quot;blockquote-center&quot;&gt;&lt;p&gt;今天的风儿好喧嚣 &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="行万里路" scheme="http://yoursite.com/categories/%E8%A1%8C%E4%B8%87%E9%87%8C%E8%B7%AF/"/>
    
    
      <category term="世界那么大" scheme="http://yoursite.com/tags/%E4%B8%96%E7%95%8C%E9%82%A3%E4%B9%88%E5%A4%A7/"/>
    
  </entry>
  
  <entry>
    <title>小目标</title>
    <link href="http://yoursite.com/2017/04/22/%E6%88%91%E7%9A%84%E6%A2%A6%E6%83%B32/"/>
    <id>http://yoursite.com/2017/04/22/我的梦想2/</id>
    <published>2017-04-22T14:22:59.000Z</published>
    <updated>2017-04-23T11:25:56.000Z</updated>
    
    <content type="html"><![CDATA[<p><br><br><br></p>
<p><br><br><br><br><br></p>
<a id="more"></a>
<center>独善其身</center>

<p><br><br><br></p>
<p><br><br><br><br><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="梦想" scheme="http://yoursite.com/tags/%E6%A2%A6%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Android 仿淘宝商品详情页</title>
    <link href="http://yoursite.com/2017/04/17/Android_%E4%BB%BF%E6%B7%98%E5%AE%9D%E5%95%86%E5%93%81%E8%AF%A6%E6%83%85%E9%A1%B5/"/>
    <id>http://yoursite.com/2017/04/17/Android_仿淘宝商品详情页/</id>
    <published>2017-04-17T09:41:06.000Z</published>
    <updated>2017-04-17T10:54:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>其实差很多，只是简单的模仿里面的一个效果而已。稍微做个笔记。</p>
<p>效果是这个样子的。</p>
<p><img src="http://i4.buimg.com/567571/1f8ddefdf9009ce9.gif" alt=""></p>
<a id="more"></a>
<p>上面那几个 ITEM 可以点击，还有下面模块滑动的时候，对应的 ITEM 要变色，就俩需求。</p>
<p>这里我采用的都是最直接的方式，上面那个用 <code>LinearLayout</code> 包几个按钮，下面那个用 <code>ScrallView</code>，整体用 <code>FrameLayout</code> 包起来。(这种简单的叠加别用耗性能的 <code>RelativeLayout</code>)</p>
<p>上布局代码:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">"com.zhanglf.goodsdetail.MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">com.zhanglf.goodsdetail.ScrollViewDIY</span></span></div><div class="line">        <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></div><div class="line">        <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/scrollView"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">tools:context</span>=<span class="string">"com.zhanglf.goodsdetail.MainActivity"</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/view_one"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"400dp"</span></div><div class="line">                <span class="attr">android:layout_marginTop</span>=<span class="string">"45dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"@android:color/holo_orange_dark"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">View</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/view_two"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"700dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_bright"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">View</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/view_three"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"600dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"@android:color/holo_green_dark"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">            <span class="tag">&lt;/<span class="name">View</span>&gt;</span></div><div class="line"></div><div class="line">            <span class="tag">&lt;<span class="name">View</span></span></div><div class="line">                <span class="attr">android:id</span>=<span class="string">"@+id/view_four"</span></div><div class="line">                <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">                <span class="attr">android:layout_height</span>=<span class="string">"800dp"</span></div><div class="line">                <span class="attr">android:background</span>=<span class="string">"@android:color/holo_red_light"</span></div><div class="line">                <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line">            <span class="tag">&lt;/<span class="name">View</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">com.zhanglf.goodsdetail.ScrollViewDIY</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_purple"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_item1"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">" Item 1 "</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_item2"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">" Item 2 "</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_item3"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">" Item 3 "</span>/&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/bt_item4"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_weight</span>=<span class="string">"1"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">" Item 4 "</span>/&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>写 4 个 ITEM 按钮的点击事件，下面模块的跳转用 <code>ScrollView</code> 的 <code>smoothScrollTo()</code> 方法就好了。</p>
<p>这个方法需要传入两个参数，分别是 x 和 y 的坐标。这里 x 我们传 0 就好了。y 的话直接用 <code>getTop();</code> 获取距离顶部的距离。</p>
<p>这里有一点要<strong>注意</strong>，<code>Activity</code> 生命周期中，<code>onStart</code>, <code>onResume</code>, <code>onCreate</code> 都不是真正 <code>visible</code> 的时间点，真正的<code>visible</code> 时间点是 <code>onWindowFocusChanged()</code> 函数被执行时。</p>
<p>所以 <code>getTop()</code> 要放在 <code>onWindowFocusChanged()</code> 里面执行，否则过早调用 <code>getTop()</code>，比如在 <code>onCreate()</code> 中调用，可能会因为这个 <code>view</code> 还没有被加到 <code>rootview</code> 中获取到的值都是 0。</p>
<p>第二个需求是要根据滑动距离让上面对应的 ITEM 变色。</p>
<p>这个时候需要实现 <code>ScrollView</code> 的 <code>OnScollChangedListener</code> 接口，但是会发现 Call requires API 23 。</p>
<p>所以，最好还是自己创建一个类继承系统的 <code>ScrollView</code> 来兼容低版本。(不是很清楚为什么 Google要将 <code>onScrollChanged()</code> 定义成 <code>protected</code>)</p>
<p>上代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScrollViewDIY</span> <span class="keyword">extends</span> <span class="title">ScrollView</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScrollViewDIY</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScrollViewDIY</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ScrollViewDIY</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyle)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context, attrs, defStyle);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onScrollChanged</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> oldx, <span class="keyword">int</span> oldy)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onScrollChanged(x, y, oldx, oldy);</div><div class="line">        <span class="keyword">if</span> (onScollChangedListener != <span class="keyword">null</span>) &#123;</div><div class="line">            onScollChangedListener.onScrollChanged(<span class="keyword">this</span>, x, y, oldx, oldy);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//接口回调</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnScollChangedListener</span><span class="params">(OnScollChangedListener onScollChangedListener)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.onScollChangedListener = onScollChangedListener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnScollChangedListener</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">void</span> <span class="title">onScrollChanged</span><span class="params">(ScrollViewDIY scrollView, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> oldx, <span class="keyword">int</span> oldy)</span></span>;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> OnScollChangedListener onScollChangedListener;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>有个小技巧，关于自定义的 View ，每次都要写那三段构造函数是不是很烦？</p>
<p>其实 Google 早就想到了，直接打 ViewConstructors 就可以自动完成了。你也可以在这里修改该 Templates :</p>
<p><img src="http://i1.piimg.com/567571/d7a696a0226aa4ec.png" alt=""></p>
<p>然后就没有然后了，直接判断范围了好了。</p>
<p>整体代码:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> ScrollViewDIY mScroll;</div><div class="line">    <span class="keyword">private</span> Button mBt1;</div><div class="line">    <span class="keyword">private</span> Button mBt2;</div><div class="line">    <span class="keyword">private</span> Button mBt3;</div><div class="line">    <span class="keyword">private</span> Button mBt4;</div><div class="line">    <span class="keyword">private</span> View mView1;</div><div class="line">    <span class="keyword">private</span> View mView2;</div><div class="line">    <span class="keyword">private</span> View mView3;</div><div class="line">    <span class="keyword">private</span> View mView4;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mTop1;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mTop2;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mTop3;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mTop4;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line">        intView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">intView</span><span class="params">()</span> </span>&#123;</div><div class="line">        mScroll = (ScrollViewDIY) findViewById(R.id.scrollView);</div><div class="line">        mView1 =  findViewById(R.id.view_one);</div><div class="line">        mView2 =  findViewById(R.id.view_two);</div><div class="line">        mView3 =  findViewById(R.id.view_three);</div><div class="line">        mView4 =  findViewById(R.id.view_four);</div><div class="line">        mBt1 = (Button) findViewById(R.id.bt_item1);</div><div class="line">        mBt2 = (Button) findViewById(R.id.bt_item2);</div><div class="line">        mBt3 = (Button) findViewById(R.id.bt_item3);</div><div class="line">        mBt4 = (Button) findViewById(R.id.bt_item4);</div><div class="line"></div><div class="line">        mBt1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                mScroll.smoothScrollTo(<span class="number">0</span>,mTop1);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mBt2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                mScroll.smoothScrollTo(<span class="number">0</span>,mTop2);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mBt3.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                mScroll.smoothScrollTo(<span class="number">0</span>,mTop3);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mBt4.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                mScroll.smoothScrollTo(<span class="number">0</span>,mTop4);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mScroll.setOnScollChangedListener(<span class="keyword">new</span> ScrollViewDIY.OnScollChangedListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrollChanged</span><span class="params">(ScrollViewDIY scrollView, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> oldx, <span class="keyword">int</span> oldy)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (y&lt;mTop2) &#123;</div><div class="line">                    setColor(<span class="number">1</span>);</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y&gt;=mTop2&amp;&amp;y&lt;mTop3) &#123;</div><div class="line">                    setColor(<span class="number">2</span>);</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y&gt;=mTop3&amp;&amp;y&lt;mTop4) &#123;</div><div class="line">                    setColor(<span class="number">3</span>);</div><div class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (y&gt;=mTop4) &#123;</div><div class="line">                    setColor(<span class="number">4</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setColor</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</div><div class="line">        mBt1.setTextColor(Color.BLACK);</div><div class="line">        mBt2.setTextColor(Color.BLACK);</div><div class="line">        mBt3.setTextColor(Color.BLACK);</div><div class="line">        mBt4.setTextColor(Color.BLACK);</div><div class="line">        <span class="keyword">switch</span> (index) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">                mBt1.setTextColor(Color.RED);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">                mBt2.setTextColor(Color.RED);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">                mBt3.setTextColor(Color.RED);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="number">4</span>:</div><div class="line">                mBt4.setTextColor(Color.RED);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onWindowFocusChanged</span><span class="params">(<span class="keyword">boolean</span> hasFocus)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onWindowFocusChanged(hasFocus);</div><div class="line">        mTop1 = mView1.getTop();</div><div class="line">        mTop2 = mView2.getTop();</div><div class="line">        mTop3 = mView3.getTop();</div><div class="line">        mTop4 = mView4.getTop();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>就是这么简单。</p>
<p><img src="https://gss0.baidu.com/-Po3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=63bf992667380cd7e64baaeb9174810c/63d9f2d3572c11df7a2dd9b5612762d0f603c2ac.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;其实差很多，只是简单的模仿里面的一个效果而已。稍微做个笔记。&lt;/p&gt;
&lt;p&gt;效果是这个样子的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://i4.buimg.com/567571/1f8ddefdf9009ce9.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>Sketch 初体验</title>
    <link href="http://yoursite.com/2017/04/16/sketch%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://yoursite.com/2017/04/16/sketch初体验/</id>
    <published>2017-04-16T12:55:17.000Z</published>
    <updated>2017-04-16T14:05:50.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://xclient.info/s/sketch.html#history_versions" target="_blank" rel="external"><em>下载这个软件</em></a> 的主要原因是因为这个软件的图标比较漂漂!</p>
<p>还有就是我也想体验下做设计的快感，啊哈哈。</p>
<p>趁着周末比较闲玩了半天左右(话说我…好像…平时也不忙)，期间参考了挺多的资料，稍微做点笔记。</p>
<a id="more"></a>
<h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><p>先是了解下这个工具是干嘛用的，它的 <a href="https://www.zhihu.com/question/20715139" target="_blank" rel="external"><em>优缺点什么</em></a> 的，发现还是很有必要试试看的，然后大致看点基本操作。</p>
<p>比如 <a href="http://www.sketchcn.com/" target="_blank" rel="external">Sketch 中文网</a>，可是觉得看这种网站写的教程就和回到学生时代一样，看了几分钟就想睡觉。</p>
<p>太啰嗦了。</p>
<p>我还是先去看看大神做出来的 Demo 长什么样子，刺激下。然后逛了一圈 <strong><a href="https://www.sketchappsources.com/all-free-sources.html" target="_blank" rel="external">这里</a></strong>。</p>
<p>下了几个比较 <a href="https://www.sketchappsources.com/free-source/2563-flavr-recipes-app-ios-ui-kit-sketch-freebie-resource.html" target="_blank" rel="external">喜欢</a> 的风格。<br>例如:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-16%20%E4%B8%8B%E5%8D%889.37.52.png" alt=""></p>
<p>用 Sketch 打开之后，简单的点了点各个所谓的 <a href="http://www.jianshu.com/p/c7eb767308ed" target="_blank" rel="external">Artboard</a> ，原来就是拷贝来拷贝去的，然后图层叠加。好像比写代码轻松多了啊，我当时那么想。</p>
<p>工具总体的使用相对比较简单吧，最主要还是看设计的。</p>
<h3 id="动手"><a href="#动手" class="headerlink" title="动手"></a>动手</h3><p>然后我就想着先设计几个简单但是要有点创意的界面，先从登录开始设计吧…</p>
<p>然后几分钟过去了… </p>
<p>又几分钟过去了…</p>
<p>。。。</p>
<p>好吧，我放弃了。</p>
<p>我觉得这么出名的软件插件一定不少，搜下了。</p>
<p>找了几个比较常用的。</p>
<ul>
<li>用来批量命名的 <a href="https://github.com/rodi01/RenameIt" target="_blank" rel="external">RenameIt</a></li>
<li>用来随机加载图片的(感觉这个有点厉害) <a href="https://github.com/timuric/Content-generator-sketch-plugin" target="_blank" rel="external">Content-generator-sketch-plugin</a></li>
<li>用来标记尺寸的 <a href="https://github.com/utom/sketch-measure" target="_blank" rel="external">sketch-measure</a></li>
<li>用来做注释的 <a href="https://github.com/marcosvidal/Sketch-Notebook" target="_blank" rel="external">Sketch-Notebook</a></li>
</ul>
<p>安装方式很简单，就是从 Github 上面把文件下载下来，然后丢 Sketch 的 Plugins 的文件夹下面就行了。</p>
<p>你也可以这样找到那个文件夹:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-16%20%E4%B8%8B%E5%8D%889.17.23.png" alt=""></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-16%20%E4%B8%8B%E5%8D%889.17.33.png" alt=""></p>
<p>我的那几个都是放进去立马就生效了，都不用重启，很酷哦。</p>
<p>使用也很简单，比如那个加载图形的插件，你先画个图形做载体，然后像下图那样选一下要加载的内容就好(女的都没几个漂亮的啊，喂)。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-16%20%E4%B8%8B%E5%8D%889.21.52.png" alt=""></p>
<p>我看了会儿极客上个一个简单的 <a href="http://www.jikexueyuan.com/course/704_6.html?ss=1" target="_blank" rel="external">视频教程</a>，他做了两个界面，他做的很丑。像这样:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-16%20%E4%B8%8B%E5%8D%889.25.31.png" alt=""></p>
<p>我很鄙视，然后我也做了个差不多的。</p>
<p>。。。</p>
<p>。。。</p>
<p>可是更丑，虽然做起来很快。像这样:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-16%20%E4%B8%8B%E5%8D%888.59.23.png" alt=""></p>
<p>那堆图片的命名我就是用那个 RenameIt 插件命名的，使用很简单，选好那堆图片然后点插件，输入 Img%n 就好了。</p>
<p>原型图的制作工具操作起来应该更简单。</p>
<p>但是问题来了，无论是设计图或者原型图，本来制作的难点就和工具操作的难易程度几乎没有关系。</p>
<p>原型图的重点是需求的体现，设计的重点是总整风格的把控和更加友好的交互。(当然，这只是一名非常普通的开发者的看法)</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>还是敲代码有意思。</p>
<p><img src="https://ss0.bdstatic.com/70cFuHSh_Q1YnxGkpoWK1HF6hhy/it/u=253338849,3188989570&amp;fm=21&amp;gp=0.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://xclient.info/s/sketch.html#history_versions&quot;&gt;&lt;em&gt;下载这个软件&lt;/em&gt;&lt;/a&gt; 的主要原因是因为这个软件的图标比较漂漂!&lt;/p&gt;
&lt;p&gt;还有就是我也想体验下做设计的快感，啊哈哈。&lt;/p&gt;
&lt;p&gt;趁着周末比较闲玩了半天左右(话说我…好像…平时也不忙)，期间参考了挺多的资料，稍微做点笔记。&lt;/p&gt;
    
    </summary>
    
      <category term="设计" scheme="http://yoursite.com/categories/%E8%AE%BE%E8%AE%A1/"/>
    
    
      <category term="设计" scheme="http://yoursite.com/tags/%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>安卓桌面图标未读数字</title>
    <link href="http://yoursite.com/2017/04/15/%E5%AE%89%E5%8D%93%E6%A1%8C%E9%9D%A2%E5%9B%BE%E6%A0%87%E6%9C%AA%E8%AF%BB%E6%95%B0%E5%AD%97/"/>
    <id>http://yoursite.com/2017/04/15/安卓桌面图标未读数字/</id>
    <published>2017-04-15T08:58:12.000Z</published>
    <updated>2017-04-15T09:52:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>再不写个安卓技术文，都要忘了自己其实是做安卓的了。</p>
<p><img src="http://imgsrc.baidu.com/forum/w%3D580/sign=b8700c65494a20a4311e3ccfa0539847/d2198e16fdfaaf5108b8d5c88a5494eef01f7a74.jpg" alt=""></p>
<p>今天要是实现的就是这种东西</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-15%20%E4%B8%8B%E5%8D%885.06.07.png" alt=""></p>
<a id="more"></a>
<p>说实话，有点恶心。每次支付宝微信什么的这种未读标志出现的时候就忍不住去点。</p>
<p>好了，我的学习流程是这样的，先在网上搜了下:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-15%20%E4%B8%8B%E5%8D%885.09.51.png" alt=""></p>
<p>看了几篇之后，发现 <a href="http://www.jianshu.com/p/0992ff9eeeb6" target="_blank" rel="external"><em>这个</em></a> 写的比较用心，除了无形狗粮。</p>
<p>然后找到了 Github 上面的 <a href="https://github.com/leolin310148/ShortcutBadger" target="_blank" rel="external"><em>这个</em></a>，应该是用的人最多的了。</p>
<p>使用起来非非常的方便:</p>
<p>新建了个工程，在布局中简单写了两个 <code>Button</code> ，一个用来添加未读的标志，一个用来消除未读的标记。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"addCount"</span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/bt_addCount"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"removeCount"</span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/bt_removeCount"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>/&gt;</div></pre></td></tr></table></figure>
<p>然后在代码中添加按钮的点击事件:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">mBtAddCount = (Button) findViewById(R.id.bt_addCount);</div><div class="line">        mBtAddCount.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (ShortcutBadger.isBadgeCounterSupported(getApplicationContext())) &#123;</div><div class="line">                    ShortcutBadger.applyCount(getApplicationContext(),<span class="number">1</span>);</div><div class="line">                    Toast  toast = Toast.makeText(getApplicationContext(),<span class="string">"标记已添加"</span>,Toast.LENGTH_SHORT);</div><div class="line">                    toast.show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        mBtRemove = (Button) findViewById(R.id.bt_removeCount);</div><div class="line">        mBtRemove.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">                <span class="keyword">if</span> (ShortcutBadger.isBadgeCounterSupported(getApplicationContext())) &#123;</div><div class="line">                    ShortcutBadger.removeCount(getApplicationContext());</div><div class="line">                    Toast  toast = Toast.makeText(getApplicationContext(),<span class="string">"标记已清除"</span>,Toast.LENGTH_SHORT);</div><div class="line">                    toast.show();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<p>灰常快，然后在真机上试了下，能用。（手头只有自己使用的手机，华为荣耀 6。）</p>
<p>再然后，看源码。</p>
<p>怎么说呢，可以这样理解。桌面屏幕其实也是个 Activity 界面，是一个类，Launcher 。修改桌面图标其实就是传一些参数进去，然后调用里面的修改图标的方法。(这个方法各个厂商的实现方式可能都是不一样的，原生其实是没有的，因为有强大的通知栏了，为何要整这种逼死强迫症的东西呢)</p>
<p>需要的参数有包名，类名，和想要设置的数字。移除标志其实就是数字传 0。</p>
<p>不依赖三方库，我自己实现了下，像这样:</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Intent launchIntent = getApplicationContext().getPackageManager().getLaunchIntentForPackage(getApplicationContext().getPackageName());</div><div class="line">Bundle localBundle = <span class="keyword">new</span> Bundle();</div><div class="line">localBundle.putString(<span class="string">"package"</span>, getApplicationContext().getPackageName());</div><div class="line">localBundle.putString(<span class="string">"class"</span>, launchIntent.getComponent().getClassName());</div><div class="line">localBundle.putInt(<span class="string">"badgenumber"</span>, <span class="number">1</span>);</div><div class="line">getApplicationContext().getContentResolver().call(Uri.parse(<span class="string">"content://com.huawei.android.launcher.settings/badge/"</span>), <span class="string">"change_badge"</span>, <span class="keyword">null</span>, localBundle);</div></pre></td></tr></table></figure>
<p>运行了下，妥妥的。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-15%20%E4%B8%8B%E5%8D%885.06.20.png" alt=""></p>
<p>烦在哪里呢，安卓严重的碎片化。不同牌子的实现方式就都不一样了，上面只是华为的。</p>
<p>有的手机，例如锤子之类的，只有 System App 才能改。</p>
<p>ShortcutBadger 就是对市场上的绝大多数品牌的手机做了适配。一般手机的实现方式都和上面华为那个差不多，传参数调接口就行了。具体可以看<a href="https://github.com/leolin310148/ShortcutBadger/tree/master/ShortcutBadger/src/main/java/me/leolin/shortcutbadger/impl" target="_blank" rel="external"><em>这里</em></a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;再不写个安卓技术文，都要忘了自己其实是做安卓的了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://imgsrc.baidu.com/forum/w%3D580/sign=b8700c65494a20a4311e3ccfa0539847/d2198e16fdfaaf5108b8d5c88a5494eef01f7a74.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;今天要是实现的就是这种东西&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-15%20%E4%B8%8B%E5%8D%885.06.07.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="安卓" scheme="http://yoursite.com/categories/%E5%AE%89%E5%8D%93/"/>
    
    
      <category term="安卓" scheme="http://yoursite.com/tags/%E5%AE%89%E5%8D%93/"/>
    
  </entry>
  
  <entry>
    <title>我的梦想1</title>
    <link href="http://yoursite.com/2017/04/15/%E6%88%91%E7%9A%84%E6%A2%A6%E6%83%B3/"/>
    <id>http://yoursite.com/2017/04/15/我的梦想/</id>
    <published>2017-04-15T05:13:28.000Z</published>
    <updated>2017-04-22T14:22:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><br><br><br></p>
<p><br><br><br><br><br></p>
<a id="more"></a>
<center>养两只猫，一只灰色的，一只白色的</center>

<p><br><br><br></p>
<p><br><br><br><br><br></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;br&gt;&lt;/br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="梦想" scheme="http://yoursite.com/categories/%E6%A2%A6%E6%83%B3/"/>
    
    
      <category term="梦想" scheme="http://yoursite.com/tags/%E6%A2%A6%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>周末停水</title>
    <link href="http://yoursite.com/2017/04/15/%E5%91%A8%E6%9C%AB%E5%81%9C%E6%B0%B4/"/>
    <id>http://yoursite.com/2017/04/15/周末停水/</id>
    <published>2017-04-15T04:37:32.000Z</published>
    <updated>2017-04-15T05:00:20.000Z</updated>
    
    <content type="html"><![CDATA[<p>好不容易周末了。</p>
<p>居然停水了。</p>
<div align="center"><br> <img src="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=98a158584f10b912bf94fef8f3cdd03b/9a504fc2d5628535b06dcdc298ef76c6a6ef6347.jpg" width="200" height="200" alt="图片名称" align="center"><br> </div>


<a id="more"></a>
<p>都不能好好煮饭做菜了。</p>
<p>拉屎都要出去拉。</p>
 <div align="center"><br> <img src=" http://img2.imgtn.bdimg.com/it/u=146946539,2154009609&fm=11&gp=0.jpg" width="200" height="200" alt="图片名称" align="center"><br> </div>

<p>昨晚太累太忙了估计是，虽然看到了楼下的通知，但是忘记屯水了。</p>
<p>9 点到 5 点停水，只能是做晚饭了。</p>
<p>一般是周末的时候煮点不错的汤，好好补补的。</p>
<p>另外，早上骑车出去买菜的时候，看到</p>
<div align="center"><br> <img src=" https://ss1.bdstatic.com/70cFvXSh_Q1YnxGkpoWK1HF6hhy/it/u=320948557,2220721548&fm=23&gp=0.jpg" width="200" height="200" alt="图片名称" align="center"><br> </div>

<p>漫天柳树精子，一不小心还吸到鼻子里面，蓝瘦。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;好不容易周末了。&lt;/p&gt;
&lt;p&gt;居然停水了。&lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;br&gt; &lt;img src=&quot;https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=98a158584f10b912bf94fef8f3cdd03b/9a504fc2d5628535b06dcdc298ef76c6a6ef6347.jpg&quot; width = &quot;200&quot; height = &quot;200&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; /&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="宅家" scheme="http://yoursite.com/tags/%E5%AE%85%E5%AE%B6/"/>
    
  </entry>
  
  <entry>
    <title>4月随想</title>
    <link href="http://yoursite.com/2017/04/14/4%E6%9C%88%E9%9A%8F%E6%83%B3/"/>
    <id>http://yoursite.com/2017/04/14/4月随想/</id>
    <published>2017-04-14T13:12:36.000Z</published>
    <updated>2017-04-15T05:01:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>这算是第一次在网上写自己的感想吗？ </p>
<p>我想了想。</p>
<p>不算。 </p>
<p>好歹我中学的也是玩过 QQ 空间的，写过不少日志。 </p>
<div align="center"><br> <img src="http://img3.imgtn.bdimg.com/it/u=3471221132,3526623089&fm=23&gp=0.jpg" width="100" height="100" alt="图片名称" align="center"><br> </div>

<a id="more"></a>
<p>说是 4 月随想，没准我会连小学 5 年级同桌还欠我一包辣条的事情给说出来，当然，我不会。</p>
<div align="center"><br> <img src="https://gss0.baidu.com/9fo3dSag_xI4khGko9WTAnF6hhy/zhidao/pic/item/eac4b74543a982269501bfb98e82b9014b90eb68.jpg" width="100" height="100" alt="图片名称" align="center"><br> </div><br><!--more--><br>去年发生了太太多事情了(相比我约前 1/4 的平淡人生)，算的上是人生路上的事故多发地段了。也说的上是实现小时候的一小半梦想了吧。<br><br>通过自己的努力成为一个拿着固定工资，基本能够养活自己，做着自己喜欢的工作，周末偶尔还能出去逛逛。(本来不怎么样的心情，写着写着咋感觉自己也不算差呢，有点小激动)<br><br>是的，突然就膨胀了。<br><br><img src="https://gss0.baidu.com/-vo3dSag_xI4khGko9WTAnF6hhy/zhidao/wh%3D600%2C800/sign=5d8bad5a35adcbef016176009c9f02e5/a1ec08fa513d2697d4c79cc351fbb2fb4316d81c.jpg" alt=""><br><br>言归正传，从 3 月上海离职回福建老家，吃我妈妈煮的很好吃的菜吃了半个月，4 月来杭州，面试 2 家公司都运气很好的拿到了 offer ，然后顺利入职，再到和朋友一起在一小区还不错的两室一厅合租。这一切对于身心处于发育阶段的我来说<br><br><img src="http://pic.9ht.com/up/2016-1/14541223419540327.jpg" alt=""><br><br>不可思议。<br><br>此刻住在早上被太阳照醒的小区，不由想起前半年在上海，半夜被左边那个疯子般喝多了酒的邻居(整夜神经病式的激光枪般爆粗口哒哒不休)和右边那个好像男朋友很多的女邻居(偶尔半夜嗷嗷嗯嗯欲要还羞实着浪个不停)，支配的恐惧。<br><br>我的语文老师教的好，其实不用括号和逗号也并没有什么问题，但是为了方便阅读，我加了，很酷。<br><br>关键屋子地方唯一的通风口还对着下水道，从那跑进屋子的老鼠如果是母的估计已经生小宝宝了，我的米和苹果没有白喂。<br><br>这么看来我也是个有点曲折经历的男人了。<br><br><div align="center"><br> <img src="http://pics.sc.chinaz.com/Files/pic/faces/3894/5.jpg" width="200" height="200" alt="图片名称" align="center"><br> </div>

<p>虽然离开上海的时候，它并没有给我留下什么好的印象，但是现在还是挺怀念那个不算很小的团队的。</p>
<p>估计我最佩服就是那个设计了，一人担起 3 个还是 4 个应用的 PC 和移动端的设计。虽然给我的都是 IOS 的图，但是看到他手里拿着 Nexus 手机，和我说起 Material Design 头头是道，真是一把辛酸泪。虽然不是很懂设计在干嘛，但是我还是觉得这人战斗力不弱。</p>
<p>关于设计，下午琢磨了半天的 Sketch ，我想这个周末随便整个记事类型的 App 试试。</p>
<div align="center"><br> <img src="http://img0.imgtn.bdimg.com/it/u=3690421109,3821191199&fm=23&gp=0.jpg" width="200" height="200" alt="图片名称" align="center"><br> </div>

<p>其实小团队相对来说效率还是很高的，不开过多的会议，半年的时间我参加了不到 5 次。当然效率和开会关系不大，根本不差那点时间，但是这是一个体制的问题，为什么开会多，那是因为决定权往往不是在一个人手里，那是因为大家都相信通过讨论事情能有更好的解决方案。</p>
<p>几乎什么问题都要讨论，没有办法就是这样。</p>
<p><strong>黑客与画家</strong> 中的主角，刚好下午看到那章，他最开始所在的公司 Viaweb。一共就 3 个人。一个界面，一个后台，一个管理，一个用 C 和 C++，一个用 Perl，一个用 Python，一同开发一款互联网服务的产品。后来被雅虎以不低的价格收购了，之后他在感受到了大公司的做派，很不适应。</p>
<p>他还说了个 <a href="http://baike.baidu.com/link?url=SGXnIqr8q-hc7M93XB8b7yEIQ82K45H8qfxHJFrvVv6hkFoM-gVTi_WCC7ckbBe0FgQ_YAazQvMWVwKQbGCywdm9a7m2Hr2ySwkO9fnv-2XV7PqKKAVR9ZsPQ-QRWyd9" target="_blank" rel="external">人月神话</a> 中的事，10 个人一个月可以做完的事，可能 20 个人半个月可以做完，30 个人可能要两个月，100 人估计一年都完成不了。 </p>
<p>这事估计包工头是搞不拎清的，但是管技术的都懂。</p>
<p>当然我是没有这种烦恼，毕竟我现在也算是自己负责一个 App。</p>
<div align="center"><br> <img src="http://img5.imgtn.bdimg.com/it/u=1707114256,3473739083&fm=23&gp=0.jpg" width="300" height="200" alt="图片名称" align="center"><br> </div>

<p>估计我是离题了。</p>
<p>小时候，可能是智力小游戏玩多了，现在脑子有点不大好使。也有可能是大学的时候 LOL 玩多了，</p>
<p>屁嘞，皮肤抽了一堆，排位一共还没玩 20 把，</p>
<p>哦，那可能是大乱斗和无限火力玩傻了。</p>
<p>大学，在做图书馆管理员的那段日子，应该是书看多了，放下了游戏，看起了单片机。</p>
<p>也不知道脑子是瓦特了还是又进水了，那个寒假买了万能表和电烙铁等一堆装备半夜在家焊电路。看着郭天祥的 10 天学会 51 单片机想着我可能可以在那板子上跑个小游戏。</p>
<p>事实证明：</p>
<p><img src="http://img0.imgtn.bdimg.com/it/u=1191114715,1311049547&amp;fm=23&amp;gp=0.jpg" alt=""></p>
<p>现在在公司暂时我还是挺没事做的。当然我说的事仅仅指的是公司分配的任务，自己要做的事还是一大堆。</p>
<p>例如现在是周五晚上 11 点，我居然在写这个可能是没有意义的东西。像这种事，可能我可以循环几个月。</p>
<p>所以我给自己定了一个更加无聊的小目标。</p>
<p>每周不论是随笔，随想或者是电影观后感，书籍读后感。以上选一个整理出来。要发博客才算。(我会告诉你我换了新住址之后心情好的每天都自己写日记吗)</p>
<p>每天记录 5 个技术型的单词，例如，今天的单词是 <strong>eliminate</strong>，<strong>obscure</strong>，<strong>anticipate</strong>，<strong>allocation</strong>，<strong>concrete</strong>。苹果的小伙伴注意，小技巧，选择单词，然后 command + shift + y ，一般人我不告诉他。</p>
<p><img src="http://img1.imgtn.bdimg.com/it/u=2539876683,45375580&amp;fm=23&amp;gp=0.jpg" alt=""></p>
<p>每周回答两个知乎问题。抖机灵也好，一本正经也好。对于什么论坛什么社区的潜水的我来说，是该上去换换气了。先从它开始。</p>
<p>扇贝英语打卡就不说了，今天第 700 天了，断不了的。我可能又是有点膨胀。</p>
<p>关于尤克里里，一周一个新曲肯定不行，一段还是可以的。其实这个不用定目标，也会弹的。因为手机和电脑都没有游戏了，弹琴估计是我唯一的放松方式。</p>
<p>不对，还有做菜。做菜的时候也放松。</p>
<p>一周尝试一道新菜吧。哈哈。含着泪吃下去。</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="298" height="52" src="//music.163.com/outchain/player?type=2&id=28285910&auto=1&height=32"></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这算是第一次在网上写自己的感想吗？ &lt;/p&gt;
&lt;p&gt;我想了想。&lt;/p&gt;
&lt;p&gt;不算。 &lt;/p&gt;
&lt;p&gt;好歹我中学的也是玩过 QQ 空间的，写过不少日志。 &lt;/p&gt;
&lt;div align=&quot;center&quot;&gt;&lt;br&gt; &lt;img src=&quot;http://img3.imgtn.bdimg.com/it/u=3471221132,3526623089&amp;fm=23&amp;gp=0.jpg&quot; width = &quot;100&quot; height = &quot;100&quot; alt=&quot;图片名称&quot; align=&quot;center&quot; /&gt;&lt;br&gt; &lt;/div&gt;
    
    </summary>
    
      <category term="随笔" scheme="http://yoursite.com/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="个人随想" scheme="http://yoursite.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>Mac使用技巧</title>
    <link href="http://yoursite.com/2017/04/14/Mac%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2017/04/14/Mac使用技巧/</id>
    <published>2017-04-14T03:07:21.000Z</published>
    <updated>2017-04-27T13:42:03.000Z</updated>
    
    <content type="html"><![CDATA[<p>新版 MacPro</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8A%E5%8D%8811.14.37.png" alt=""></p>
<p> 入手 3 月多了。 简单说说使用的心得，好用的软件和一些小技巧吧。</p>
<h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><h3 id="Dock"><a href="#Dock" class="headerlink" title="Dock"></a>Dock</h3><p>在没用 Mac 之前，在 Window 系统上我就用了 <a href="http://www.ouyaoxiazai.com/soft/stgj/14/19457.html" target="_blank" rel="external">RocketDock</a> ，可山寨终究是山寨啊。</p>
<p>不过相对来说原生的 Dock 自定义性不强，怎么改都不满意。</p>
<p>在个时候就需要 <a href="http://xclient.info/s/cdock.html" target="_blank" rel="external">cDock2</a>了。</p>
<a id="more"></a>
<p>先来张图预览下:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8A%E5%8D%8811.34.35.png" alt=""></p>
<p>虽然总体区别不大，但是还是有些细节差别的。</p>
<p>更有立体感了，打开的应用会有倒影。这些通过 <a href="http://w0lfschild.github.io/app_cDock.html" target="_blank" rel="external">cDock2</a> 都是可以调整的，具体的自己调整一下就知道了。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8A%E5%8D%8811.38.21.png" alt=""></p>
<p>使用该软件之前，有几个步骤要走(软件上本来就有指导)</p>
<ol>
<li>重启 MAC。</li>
<li>按住 command + R 不动，直到 OS X 实用工具页面出现。</li>
<li>菜单上选择实用工具 -&gt; 终端</li>
<li><p>在出现的控制台窗口中输入如下命令并敲回车: </p>
<p>   csrutil disable</p>
</li>
<li>重启 MAC</li>
<li>正常进入 OS X 系统，使用 cDock2 设置 dock 样式</li>
<li>设置好后，继续重启 MAC ，按住 command + R 不动，直到 OS X 实用工具页面出现。</li>
<li><p>这次输入如下命令并敲回车：</p>
<p>   csrutil enable</p>
</li>
</ol>
<p>要是还不行，自行 <strong><a href="https://www.baidu.com/baidu?tn=64075107_1_dg&amp;ie=utf-8&amp;wd=cdock2" target="_blank" rel="external">百度</a></strong> 或 <strong><a href="https://www.google.co.jp/search?q=cdock2&amp;oq=cdock2&amp;gs_l=serp.3...51948.51948.0.52153.1.1.0.0.0.0.0.0..0.0....0...1.1.64.serp..1.0.0.3W9PtJ0bW7Q" target="_blank" rel="external">Google</a></strong> 。</p>
<p>另外还有图标的修改，也挺有意思的，之前的图片中也可以看出，我改了 Finder 和 Sublime 的图标。</p>
<p>图标的来源可以参考 <a href="https://dribbble.com/search?q=mac+icon" target="_blank" rel="external">这里</a> 。</p>
<p>修改的过程很简单，自己 <strong><a href="http://jingyan.baidu.com/article/e5c39bf5baa1e639d6603355.html" target="_blank" rel="external">搜下</a></strong> 就有了。</p>
<p>有一点要注意下，修改了图标之后，可能并不会马上生效，不要慌，重启下软件可能就好了。</p>
<h3 id="壁纸"><a href="#壁纸" class="headerlink" title="壁纸"></a>壁纸</h3><p>推荐个软件 <a href="http://arkanath.com/FreshBackMac/" target="_blank" rel="external">FreshBackMac</a> 。 很小，3M 左右，不用安装，点击就可以用了。</p>
<p>可以设置更新频率，图片内容，来源等等。。。</p>
<p>一个字，好用。</p>
<p>当然，如果刚好看到特别喜欢的桌面，也可以下载保存下来。</p>
<p>分享几张个人比较喜欢的图片。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/macbook_pro_3-wallpaper-2560x1600.jpg" alt="图1"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/bg-1.jpg" alt="图2"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/Unsplash%20Source.jpg" alt="图3"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/macbook_triangles-wallpaper-1680x1050.jpg" alt="图4"></p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/apple_leather_2-wallpaper-1680x1050.jpg" alt="图5"></p>
<h3 id="终端配色"><a href="#终端配色" class="headerlink" title="终端配色"></a>终端配色</h3><p>我用的是 <a href="http://iterm2.com/" target="_blank" rel="external">iTerm2</a>  </p>
<p>它有什么用就不<strong><a href="https://www.zhihu.com/question/27447370" target="_blank" rel="external">多说</a></strong>了。</p>
<p>配色方案很多，可以参考 <a href="https://github.com/mbadolato/iTerm2-Color-Schemes" target="_blank" rel="external">这里</a>。</p>
<p>为了方便使用，可以设置全局 <em>热键</em> ，瞬间呼出。</p>
<p>iTerm2 -&gt; Preferences -&gt; Appearance -&gt; Hotkey -&gt; Check “Show/hide iTerm2 with a system-wide hotkey”</p>
<p>然后设置新窗口的布局，让它半透明之类的(看你喜欢),占据你的半个屏幕之类的(看你喜欢),出现在顶端。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8B%E5%8D%881.32.01.png" alt=""></p>
<p>最后为了使用更酷，使用它的时候不让它出现在 Dock 上面:</p>
<p>执行:</p>
<p> <code>/usr/libexec/PlistBuddy -c &quot;Add :LSUIElement bool true&quot; /Applications/iTerm.app/Contents/Info.plist</code></p>
<p>然后重启 iTerm2 就行了。</p>
<p>想要恢复的话，执行:</p>
<p><code>/usr/libexec/PlistBuddy -c &quot;Delete :LSUIElement&quot; /Applications/iTerm.app/Contents/Info.plist</code></p>
<p>说几个常用的快捷键:</p>
<ul>
<li>command + d / command + shift + d 横竖分屏</li>
<li>command + option + 方向键 在分屏中切屏</li>
<li>command + ; 自动补全 </li>
<li><p>command + shift + h 历史记录</p>
<p>…</p>
</li>
</ul>
<h2 id="高效软件"><a href="#高效软件" class="headerlink" title="高效软件"></a>高效软件</h2><h3 id="Contexts"><a href="#Contexts" class="headerlink" title="Contexts"></a><a href="http://xclient.info/s/contexts.html" target="_blank" rel="external">Contexts</a></h3><p>第一个必须是它。</p>
<p>我 13 寸的 MacPro 肯定是没有地盘一直显示 Dock 了，所以都是自动隐藏的。</p>
<p>每次 command + m 一个软件之后，就想着有什么方法可以不用鼠标点 Dock 的情况下唤起缩小过后的程序。(用 command + tab 一个个切换太笨拙了 )</p>
<p>答案就是 <strong>Contexts</strong> ，两个字，非常棒。</p>
<p>当然，可能会有按键冲突，那么就在 设置 → Panel → Switch by window number 中，可以更改根据编号切换窗口的快捷键。</p>
<p>具体可以看这里的 <em><a href="https://sspai.com/post/32468?utm_medium=referral&amp;utm_source=tuicool" target="_blank" rel="external">详细攻略</a></em>。</p>
<h3 id="MacDown"><a href="#MacDown" class="headerlink" title="MacDown"></a><a href="https://github.com/MacDownApp/macdown" target="_blank" rel="external">MacDown</a></h3><p> 用了几个 MarkDown 的编辑器或者插件之后觉得这个最为简洁直观。</p>
<p> 常用快捷键在 Format 里，command + 一些首字母，比较少，基本都是很常用的。</p>
<p> 代码的话除了 double `。</p>
<p> 还可以使用 6 个 ` 中间加语言类型。 </p>
<p> 不管他是不是盗版还是啥的，还是支持下开源。</p>
<h3 id="BetterTouchTool"><a href="#BetterTouchTool" class="headerlink" title="BetterTouchTool"></a>BetterTouchTool</h3><p>这玩意就是将触摸板与功能更更好的体现出来。</p>
<p>它的 DIY 性令人发指。</p>
<p>手势特别的多</p>
<p><img src="http://i2.muimg.com/567571/a8a92a1ee3a8adea.png" alt=""></p>
<p>单指双指三指···</p>
<p>每种下面又细分:</p>
<p><img src="http://i1.piimg.com/567571/f8d296dfa79d84a0.png" alt=""></p>
<p>拍左边拍右边滑左边滑右边。。。</p>
<p>作用域可以是单个指定的应用或者全局:</p>
<p><img src="http://i1.piimg.com/567571/91acc1c0bd186724.png" alt=""></p>
<p>我高兴开始了我的设置，比如 Chrome 窗口下，单指轻拍右上角全屏，右下角关闭。因为觉得可以摸一下解决的事何必要用键盘呢。</p>
<p>…</p>
<p>半个小时之后，我觉得我要疯了，一不小心摸一下哪儿就触发了什么机关，定义没几个我就开始记不住了(真是太蠢了)，反正很烦。然后我就放弃了，其实键盘挺好用的，何必折腾自己。 </p>
<h3 id="Alfred-3"><a href="#Alfred-3" class="headerlink" title="Alfred 3"></a>Alfred 3</h3><p><em>待更新…</em></p>
<h2 id="翻墙"><a href="#翻墙" class="headerlink" title="翻墙"></a>翻墙</h2><h3 id="XX-net"><a href="#XX-net" class="headerlink" title="XX-net"></a><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="external">XX-net</a></h3><p>开源没有流量限制，搭配 Chrome 使用更好。</p>
<p>整体速度较快，但是不稳定。</p>
<p>具体配置 <a href="https://github.com/XX-net/XX-Net/wiki/%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3" target="_blank" rel="external">文档</a> 里已经说的非常清楚了。</p>
<h3 id="影梭"><a href="#影梭" class="headerlink" title="影梭"></a><a href="https://www.shadowshocks.com/" target="_blank" rel="external">影梭</a></h3><p>我用的是 99/年的，用了半年多了，前几个月一般般，后几个月根本上不了网。</p>
<p>太坑了，价格低质量差？</p>
<p>配置不算难，但是有点蠢，下个客户端，一个一个的加代理服务器地址。</p>
<p>用的时候最好是看看哪个延时低用哪个，很无语。</p>
<h3 id="lantern"><a href="#lantern" class="headerlink" title="lantern"></a><a href="https://github.com/getlantern/lantern" target="_blank" rel="external">lantern</a></h3><p>基础版免费有限制，不过流量不是很少，整体速度一般，但是相对稳定。</p>
<p>使用特特别简单，双击。</p>
<h2 id="一些插件"><a href="#一些插件" class="headerlink" title="一些插件"></a>一些插件</h2><h3 id="关于翻译"><a href="#关于翻译" class="headerlink" title="关于翻译"></a>关于翻译</h3><p>英语不好真是够呛的</p>
<h4 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h4><p>三指轻触取词:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8B%E5%8D%883.55.07.png" alt=""></p>
<p>设置也挺方便的:</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8B%E5%8D%883.50.37.png" alt=""></p>
<p>讲道理整个系统通用的，但是相对有时候取的范围不大准，所以一些软件还是有必要在搞些别的。</p>
<h4 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h4><p><a href="https://chrome.google.com/webstore/detail/halo-word-dictionary/bhkcehpnnlgncpnefpanachijmhikocj" target="_blank" rel="external">Halo Word Dictionary</a></p>
<p>按住 command 键取词就行了。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8B%E5%8D%883.56.54.png" alt=""></p>
<h4 id="Android-Studio"><a href="#Android-Studio" class="headerlink" title="Android Studio"></a>Android Studio</h4><p>command + shift + a 输入 plug ,</p>
<p>下载 ECTranslation 翻译插件，可能要重启生效。</p>
<p>command + , (在 Mac 上基本所有的软件的设置快捷都是这个)输入 keymap 搜索 translate ,找到后自己选个不冲突的全局快捷键就好了。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8B%E5%8D%884.22.32.png" alt=""><br><br></p>
<h2 id="4-20-更新"><a href="#4-20-更新" class="headerlink" title="4.20 更新"></a>4.20 更新</h2><h3 id="Chrome-1"><a href="#Chrome-1" class="headerlink" title="Chrome"></a>Chrome</h3><p>关于 Chrome 的最大化，直接双击顶部只能是竖向占满屏幕，如果想要横线也占满，在双击的同时按住 Shift 键。 </p>
<p>按住 control 不放 ，再按 tab 可以切换 Chrome 的子窗口，和长按 command + tab 的组合差不多。</p>
<p>以及在 Chrome 中非常非常常用的两个快捷键，command + w 关闭当前子窗口(这个在几乎所有的软件中都适用)，command + t 打开新的子窗口。哦，还有个可能会用到的，如果一不小心关了个子窗口想重新打开可能会跑历史记录里面查找恢复，直接按 command + shift + t 就好了。 </p>
<h2 id="4-22-更新"><a href="#4-22-更新" class="headerlink" title="4.22 更新"></a>4.22 更新</h2><h3 id="Chrome-2"><a href="#Chrome-2" class="headerlink" title="Chrome"></a>Chrome</h3><p>切换子窗口用 option + command + 左右方向键 更好用</p>
<h2 id="4-24-更新"><a href="#4-24-更新" class="headerlink" title="4.24 更新"></a>4.24 更新</h2><h3 id="MWeb"><a href="#MWeb" class="headerlink" title="MWeb"></a>MWeb</h3><p>现在使用的 MarkDown 工具。集成了许多插件，功能齐全，十分强大大大，还支持绑定许多图床，包括七牛，图片直接拖进去就可以使用了，之前虽然下了但是感觉不够简洁，习惯了就好了。等用一段时间再总结。</p>
<h2 id="4-27-更新"><a href="#4-27-更新" class="headerlink" title="4.27 更新"></a>4.27 更新</h2><h3 id="iterm"><a href="#iterm" class="headerlink" title="iterm"></a>iterm</h3><p>有个坑。</p>
<p>感觉今天 Mac 中毒了一样，我的 Android Studio 鼠标箭头老是变成等待的彩色圆圈，气的我敲代码的效率降低了有 36.25%，然后我就重启了我的 MBP。</p>
<p>然后发现他丫的 iTerm 老是启动失败，由于我马上弄好了，忘了截图，反正就是提示配置错误一堆的玩意，下次有机会补上截图。</p>
<p>原因就是自己作的，把 iTerm 在 Dock 中去除了，恢复了就好了。相应指令之前说过了。</p>
<p>   <strong>未完待续…</strong></p>
<p><br><br><br></p>
<p>友情链接：</p>
<p><a href="https://aaaaaashu.gitbooks.io/mac-dev-setup/content/index.html" target="_blank" rel="external">Mac 开发配置手册。</a></p>
<p><a href="https://sspai.com/tag/%E6%95%88%E7%8E%87%E5%B7%A5%E5%85%B7#home" target="_blank" rel="external">很多效率工具的推荐以及详细介绍。</a></p>
<p><a href="http://xclient.info/" target="_blank" rel="external">许多免费优质的 Mac 软件。</a></p>
<p><a href="http://blog.csdn.net/shulianghan/article/details/47321177" target="_blank" rel="external">Mac 版 Android Studio 超详细快捷键。 </a></p>
<p><a href="http://blog.csdn.net/duanyipeng/article/details/8637391" target="_blank" rel="external">Mac 版 Chrome 快捷键。</a></p>
<p><a href="https://segmentfault.com/a/1190000000505218" target="_blank" rel="external">Mac 版 Sublime 小技巧和快捷键。</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;新版 MacPro&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://on9hzfn6s.bkt.clouddn.com/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202017-04-14%20%E4%B8%8A%E5%8D%8811.14.37.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt; 入手 3 月多了。 简单说说使用的心得，好用的软件和一些小技巧吧。&lt;/p&gt;
&lt;h2 id=&quot;外观&quot;&gt;&lt;a href=&quot;#外观&quot; class=&quot;headerlink&quot; title=&quot;外观&quot;&gt;&lt;/a&gt;外观&lt;/h2&gt;&lt;h3 id=&quot;Dock&quot;&gt;&lt;a href=&quot;#Dock&quot; class=&quot;headerlink&quot; title=&quot;Dock&quot;&gt;&lt;/a&gt;Dock&lt;/h3&gt;&lt;p&gt;在没用 Mac 之前，在 Window 系统上我就用了 &lt;a href=&quot;http://www.ouyaoxiazai.com/soft/stgj/14/19457.html&quot;&gt;RocketDock&lt;/a&gt; ，可山寨终究是山寨啊。&lt;/p&gt;
&lt;p&gt;不过相对来说原生的 Dock 自定义性不强，怎么改都不满意。&lt;/p&gt;
&lt;p&gt;在个时候就需要 &lt;a href=&quot;http://xclient.info/s/cdock.html&quot;&gt;cDock2&lt;/a&gt;了。&lt;/p&gt;
    
    </summary>
    
      <category term="高效做事" scheme="http://yoursite.com/categories/%E9%AB%98%E6%95%88%E5%81%9A%E4%BA%8B/"/>
    
    
      <category term="技巧" scheme="http://yoursite.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="Mac" scheme="http://yoursite.com/tags/Mac/"/>
    
      <category term="软件" scheme="http://yoursite.com/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>网络传输基础</title>
    <link href="http://yoursite.com/2017/04/10/%E7%BD%91%E7%BB%9C%E4%BC%A0%E8%BE%93/"/>
    <id>http://yoursite.com/2017/04/10/网络传输/</id>
    <published>2017-04-10T12:52:04.000Z</published>
    <updated>2017-04-13T12:10:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="五层模型"><a href="#五层模型" class="headerlink" title="五层模型"></a>五层模型</h3><p>相比 OSI 的 7 层参考模型，为了更加高效的开发，TCP/IP 使用了 4 层参考模型。</p>
<p>但是一般为了介绍方便，一般采用 5 层协议。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/1-150526093225401.png" alt=""></p>
<p>为何协议，协议就是大家都遵守的规则，所有的这些协议统称为<strong>互联网协议</strong>。<br><a id="more"></a><br>每层模型都有属于自己的协议，协议各式各样，有的是为了数据能找到目的地址，有的是为了保证源数据的完整性，有的是当发送失败的重发使用等等。</p>
<p><img src="http://on9hzfn6s.bkt.clouddn.com/231055580455666.jpg" alt=""></p>
<p>发送数据的时候至上而下经过层层模型，经过每层模型的时候都会在数据中加点本层模型的内容，层层封装之后发送到另一个主机上。</p>
<p>就像是买了个小礼品，包装了一层一层，最后写上收件人交给邮递员，历经万水千山，收件人拿到了快递，再一层一层的拆包装，最后才能看到里面的小礼品。</p>
<p>对的，就算你在 QQ 上发了一个句号给你的朋友，这个句号也要这样经过层层封装，在网络中不断辗转。</p>
<p>下面就主要介绍一下每层之中重要的协议和一些基本概念。</p>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>是体系中的最高层，也是用户最能直观感受到的一层。</p>
<p>该层的任务是<strong>通过应用进程间的交互来完成特定网络应用</strong>。这里进程就是指那些正在运行的程序。</p>
<p>例如 QQ、Chrome、Foxmail 等。不同的程序有各自的协议，比如 Chrome 就应该遵守 <a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AEhtt" target="_blank" rel="external">HTTP</a> 或者是 <a href="https://zh.wikipedia.org/wiki/%E8%B6%85%E6%96%87%E6%9C%AC%E4%BC%A0%E8%BE%93%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">HTTPS</a> 协议，Foxmail 要遵守 <a href="https://zh.wikipedia.org/wiki/%E7%AE%80%E5%8D%95%E9%82%AE%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">SMTP</a> 协议，QQ 之间传递文件就要遵守 <a href="https://zh.wikipedia.org/wiki/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE" target="_blank" rel="external">FTP</a> 协议。</p>
<p>我们常说的报文，就是该层交互的数据单元。</p>
<p>HTTP 协议:</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;h3 id=&quot;五层模型&quot;&gt;&lt;a href=&quot;#五层模型&quot; class=&quot;headerlink&quot; title=&quot;五层模型&quot;&gt;&lt;/a&gt;五层模型&lt;/h3&gt;&lt;p&gt;相比 OSI 的 7 层参考模型，为了更加高效的开发，TCP/IP 使用了 4 层参考模型。&lt;/p&gt;
&lt;p&gt;但是一般为了介绍方便，一般采用 5 层协议。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://on9hzfn6s.bkt.clouddn.com/1-150526093225401.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;为何协议，协议就是大家都遵守的规则，所有的这些协议统称为&lt;strong&gt;互联网协议&lt;/strong&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="计算机基础" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
      <category term="计算机网络" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
      <category term="协议" scheme="http://yoursite.com/tags/%E5%8D%8F%E8%AE%AE/"/>
    
      <category term="网络" scheme="http://yoursite.com/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="传输" scheme="http://yoursite.com/tags/%E4%BC%A0%E8%BE%93/"/>
    
  </entry>
  
  <entry>
    <title>深入理解 Java 虚拟机(结构篇)</title>
    <link href="http://yoursite.com/2017/04/10/JVM%20%E7%BB%93%E6%9E%84%E7%AF%87/"/>
    <id>http://yoursite.com/2017/04/10/JVM 结构篇/</id>
    <published>2017-04-10T06:37:50.000Z</published>
    <updated>2017-04-13T12:16:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Class-类文件的结构"><a href="#Class-类文件的结构" class="headerlink" title="Class 类文件的结构"></a>Class 类文件的结构</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>是一组以 8 位字节为基础单位的二进制流。</p>
<p>其格式是一种类似于 C 语言结构体的伪结构，由两种数据类型组成。</p>
<ol>
<li>无符号数: 基本数据类型，数字、索引引用、数量值等等。</li>
<li>表: 由多个无符号数或者其他表组成，以 _info 结尾。</li>
</ol>
<p>整个 Class 文件本质上就是一张表。</p>
<p>Class 结构的了解对进一步理解虚拟机执行引擎很重要。<br><a id="more"></a></p>
<h3 id="魔数与-Class-文件版本"><a href="#魔数与-Class-文件版本" class="headerlink" title="魔数与 Class 文件版本"></a>魔数与 Class 文件版本</h3><p>每个 Class 文件的头 4 个字节被称为魔数( Magic Number )。</p>
<p>作用是确定这个文件是否能被虚拟机接受，例如 Gif，jpeg 之类的文件也存在魔数。因为通过后缀来判断不够安全。</p>
<p>Class 文件的魔数值为: OxCAFEBABE (其魔数值某种程度上也是决定了 Java 未来的图标是咖啡 ^ v ^ )</p>
<p>第 5、6、7、8 个字节分别是次版本号和主版本号。</p>
<h3 id="常量池"><a href="#常量池" class="headerlink" title="常量池"></a>常量池</h3><p>Class 文件的资源仓库。</p>
<p>常量池入口放置一个 u2 类型的数据，用于统计池中数量。</p>
<p>( u1，u2，u4，u8 分别代表 1、2、4、8 个字节的无符号数)</p>
<p>池中主要存放两种类型的常量：</p>
<ol>
<li>字面量: 像 Java 中的 String，final 修饰的常量。</li>
<li>符号引用: 类、接口、字段、方法、名称描述。JVM</li>
</ol>
<p>JDK 1.7 中有 14 中常量类型，每一项都是一个表。</p>
<h3 id="访问标志"><a href="#访问标志" class="headerlink" title="访问标志"></a>访问标志</h3><p>是否为 <code>public</code> ，<code>final</code> 是类还是接口，是否抽象，是不是枚举等等。</p>
<h3 id="类索引、父类索引、接口索引集合"><a href="#类索引、父类索引、接口索引集合" class="headerlink" title="类索引、父类索引、接口索引集合"></a>类索引、父类索引、接口索引集合</h3><h3 id="字段表集合"><a href="#字段表集合" class="headerlink" title="字段表集合"></a>字段表集合</h3><p>用来描述类或接口中声明的变量，不包括局部变量。</p>
<p>字段作用域、是实例变量还是类变量、是否被 <code>final</code> 修饰等等。</p>
<h3 id="方法表集合"><a href="#方法表集合" class="headerlink" title="方法表集合"></a>方法表集合</h3><p>描述方法，类似于字段的形式。</p>
<h3 id="属性表集合"><a href="#属性表集合" class="headerlink" title="属性表集合"></a>属性表集合</h3><p>在字段表集合和属性表集合中都存在，用来描述某些场景的专有信息。</p>
<h2 id="字节码指令"><a href="#字节码指令" class="headerlink" title="字节码指令"></a>字节码指令</h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h3><p>JVM 的指令由一个字节长度的特定数字( Opcode )和数字后面带的参数（ Operands )构成。</p>
<h3 id="字节码与数据类型"><a href="#字节码与数据类型" class="headerlink" title="字节码与数据类型"></a>字节码与数据类型</h3><p>在 Class 文件中对于不同的数据类型，采用不同的 Opcode 。</p>
<p>例如:</p>
<ul>
<li><code>iload</code> 用来操作 int 类型</li>
<li><code>fload</code> 用来操作 float 类型</li>
</ul>
<p>但是由于 JVM 中 Opcode 的长度是有限制的，只有 1 个字节，所以为每个数据类型都设计相应的 Opcode 是不现实的。</p>
<p>于是使用一些单独的指令，将不支持类型操作的，转换成支持的。</p>
<h3 id="加载和存储指令"><a href="#加载和存储指令" class="headerlink" title="加载和存储指令"></a>加载和存储指令</h3><p>栈帧中的局部变量表和操作数栈之间数据的相互传输。</p>
<h3 id="运算指令"><a href="#运算指令" class="headerlink" title="运算指令"></a>运算指令</h3><p>也是针对不同的类型，有着不同的 Opcode，例如:</p>
<ul>
<li>加法: <code>iadd</code>、<code>ladd</code>、<code>fadd</code>、<code>dadd</code></li>
<li>减法: <code>isub</code>、<code>lsub</code>、<code>fsub</code>、<code>dsub</code></li>
<li>按位与指令: <code>ior</code>、<code>lor</code></li>
</ul>
<p>可以看出首字母就是数据类型。</p>
<h3 id="类型转换指令"><a href="#类型转换指令" class="headerlink" title="类型转换指令"></a>类型转换指令</h3><p>例如: <code>i2b</code> <code>i2c</code> <code>i2s</code> 等等</p>
<h3 id="对象创建与访问指令"><a href="#对象创建与访问指令" class="headerlink" title="对象创建与访问指令"></a>对象创建与访问指令</h3><p>实例和数组采用不同的字节码指令。</p>
<h3 id="操作数栈管理指令"><a href="#操作数栈管理指令" class="headerlink" title="操作数栈管理指令"></a>操作数栈管理指令</h3><p>例如:</p>
<ul>
<li>将操作数栈的栈顶一个或两个元素出栈: <code>pop</code>、<code>pop2</code>。</li>
<li>将栈最顶端的两个数值互换: <code>swap</code>。</li>
</ul>
<h3 id="控制转移指令"><a href="#控制转移指令" class="headerlink" title="控制转移指令"></a>控制转移指令</h3><p>可以让指令不按顺序执行程序，本质上来说就是修改 PC Register 的值。</p>
<p>Java 中的保留字 <code>goto</code> 就是无条件分支中的控制转移指令。</p>
<h3 id="方法调用和返回指令"><a href="#方法调用和返回指令" class="headerlink" title="方法调用和返回指令"></a>方法调用和返回指令</h3><p>例如:</p>
<ul>
<li><code>invokestatic</code> 用于调用类方法</li>
<li><code>invokeinterface</code> 用于调用接口方法</li>
</ul>
<h3 id="异常处理指令"><a href="#异常处理指令" class="headerlink" title="异常处理指令"></a>异常处理指令</h3><p>JVM 中，处理 <code>catch</code> 语句不是由字节码指令来实现，是采用异常表来实现的。</p>
<h3 id="同步指令"><a href="#同步指令" class="headerlink" title="同步指令"></a>同步指令</h3><p>方法级的同步和方法内部的同步都是使用 Monitor 来支持的。</p>
<p>方法中调用过的每条 <code>monitorenter</code> 指令都必须执行对应的 <code>monitorexit</code> 指令。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Class-类文件的结构&quot;&gt;&lt;a href=&quot;#Class-类文件的结构&quot; class=&quot;headerlink&quot; title=&quot;Class 类文件的结构&quot;&gt;&lt;/a&gt;Class 类文件的结构&lt;/h2&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;是一组以 8 位字节为基础单位的二进制流。&lt;/p&gt;
&lt;p&gt;其格式是一种类似于 C 语言结构体的伪结构，由两种数据类型组成。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;无符号数: 基本数据类型，数字、索引引用、数量值等等。&lt;/li&gt;
&lt;li&gt;表: 由多个无符号数或者其他表组成，以 _info 结尾。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;整个 Class 文件本质上就是一张表。&lt;/p&gt;
&lt;p&gt;Class 结构的了解对进一步理解虚拟机执行引擎很重要。&lt;br&gt;
    
    </summary>
    
      <category term="读书笔记" scheme="http://yoursite.com/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java 虚拟机" scheme="http://yoursite.com/tags/Java-%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
      <category term="Class 结构" scheme="http://yoursite.com/tags/Class-%E7%BB%93%E6%9E%84/"/>
    
      <category term="JVM" scheme="http://yoursite.com/tags/JVM/"/>
    
  </entry>
  
</feed>
